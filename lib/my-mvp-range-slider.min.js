(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("my-mvp-range-slider", [], factory);
	else if(typeof exports === 'object')
		exports["my-mvp-range-slider"] = factory();
	else
		root["my-mvp-range-slider"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/plugin/plugin.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__bar {\\n  background-color: #E5E5E5;\\n  border-radius: 0.75rem;\\n  width: 0.5rem;\\n  height: 100%;\\n  cursor: pointer;\\n  position: relative;\\n}\\n\\n.slider__bar_horizontal {\\n  height: 0.5rem;\\n  width: 100%;\\n}\\n\\n.slider__range {\\n  height: 100%;\\n  background-color: #53B6A8;\\n  position: absolute;\\n  width: 100%;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css":
/*!*********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__runner {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n  position: absolute;\\n  border-radius: 50%;\\n  background-color: #53B6A8;\\n  cursor: grab;\\n  top: -0.5rem;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css":
/*!*******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__scale {\\n  width: 100%;\\n  height: 1.5rem;\\n  position: relative;\\n}\\n\\n.scale__element {\\n  position: absolute;\\n  display: flex;\\n  flex-direction: column;\\n  cursor: pointer;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  color: #e5e5e5;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css":
/*!*************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__display_container {\\n}\\n\\n.slider__display_container_horizontal {\\n  height: 2rem;\\n}\\n\\n.slider__display_value {\\n  display: inline-block;\\n  position: absolute;\\n  color: white;\\n  background-color: #53B6A8;\\n  padding: 0.1rem 0.5rem 0.3rem;\\n  border-radius: 0.4rem;\\n  cursor: default;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/view/view.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/view/view.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__container {\\n  position: relative;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding-top: 1rem;\\n  padding-bottom: 1rem;\\n}\\n\\n.slider__bar_container {\\n  position: relative;\\n  width: 100%;\\n  z-index: 2;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack://my-mvp-range-slider/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://my-mvp-range-slider/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/app/app.ts":
/*!************************!*\
  !*** ./src/app/app.ts ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/model */ \"./src/model/model.ts\");\n/* harmony import */ var _presenter_presenter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../presenter/presenter */ \"./src/presenter/presenter.ts\");\n/* harmony import */ var _view_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../view/view */ \"./src/view/view.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* eslint-disable no-useless-return */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-extra-semi */\n\n\n\nvar SliderApp = /** @class */ (function () {\n    function SliderApp(options, node) {\n        this.initOptions = options;\n        this.node = node;\n        this.createModel();\n        this.createView();\n        this.createPresenter();\n    }\n    SliderApp.prototype.update = function (options) {\n        this.options = __assign(__assign(__assign({}, this.initOptions), this.options), options);\n        this.presenter.update(options);\n    };\n    ;\n    SliderApp.prototype.getAllData = function () {\n        return this.presenter.getAllData();\n    };\n    SliderApp.prototype.getModelData = function () {\n        return this.presenter.getModelData();\n    };\n    SliderApp.prototype.getViewData = function () {\n        return this.presenter.getViewData();\n    };\n    SliderApp.prototype.getPresenterData = function () {\n        return this.presenter.getPresenterData();\n    };\n    SliderApp.prototype.reset = function () {\n        this.options = this.initOptions;\n        this.update(this.initOptions);\n    };\n    SliderApp.prototype.destroy = function () {\n        this.view.destroy();\n    };\n    SliderApp.prototype.createModel = function () {\n        var _a = this.initOptions, maxValue = _a.maxValue, minValue = _a.minValue, step = _a.step, value = _a.value, secondValue = _a.secondValue;\n        this.model = new _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            maxValue: maxValue,\n            minValue: minValue,\n            step: step,\n            value: value,\n            secondValue: secondValue,\n        });\n    };\n    SliderApp.prototype.createPresenter = function () {\n        var _a = this.initOptions, dataValues = _a.dataValues, onStart = _a.onStart, onChange = _a.onChange, onFinish = _a.onFinish, onUpdate = _a.onUpdate;\n        this.presenter = new _presenter_presenter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            model: this.model,\n            view: this.view,\n            dataValues: dataValues,\n            onStart: onStart,\n            onChange: onChange,\n            onFinish: onFinish,\n            onUpdate: onUpdate,\n        });\n    };\n    SliderApp.prototype.createView = function () {\n        var _a = this.initOptions, isHorizontal = _a.isHorizontal, range = _a.range, dragInterval = _a.dragInterval, runner = _a.runner, bar = _a.bar, scale = _a.scale, scaleStep = _a.scaleStep, displayScaleValue = _a.displayScaleValue, displayValue = _a.displayValue, displayMin = _a.displayMin, displayMax = _a.displayMax, prefix = _a.prefix, postfix = _a.postfix;\n        this.view = new _view_view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.node, {\n            isHorizontal: isHorizontal,\n            range: range,\n            dragInterval: dragInterval,\n            runner: runner,\n            bar: bar,\n            scale: scale,\n            scaleStep: scaleStep,\n            displayScaleValue: displayScaleValue,\n            displayValue: displayValue,\n            displayMin: displayMin,\n            displayMax: displayMax,\n            prefix: prefix,\n            postfix: postfix,\n        });\n    };\n    return SliderApp;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderApp);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/app/app.ts?");

/***/ }),

/***/ "./src/bar/bar.css":
/*!*************************!*\
  !*** ./src/bar/bar.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./bar.css */ \"./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.css?");

/***/ }),

/***/ "./src/bar/bar.ts":
/*!************************!*\
  !*** ./src/bar/bar.ts ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bar_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.css */ \"./src/bar/bar.css\");\n/* harmony import */ var _bar_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_bar_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar SliderBar = /** @class */ (function () {\n    function SliderBar(options) {\n        this.$view = options.$viewContainer;\n        this.$bar = SliderBar.createBar();\n        this.isRendered = false;\n    }\n    SliderBar.prototype.update = function (opts) {\n        var currentData = this.$bar.data('options');\n        var options = opts.options, data = opts.data;\n        var defaultOptions = {\n            isHorizontal: true,\n            range: true,\n            dragInterval: false,\n        };\n        var newData = __assign(__assign(__assign({}, defaultOptions), currentData), options);\n        this.$bar.data('options', newData);\n        this.$bar.data('data', data);\n        if (!newData.isHorizontal && this.$bar.hasClass('slider__bar_horizontal')) {\n            this.$bar.removeClass('slider__bar_horizontal');\n        }\n        else if (newData.isHorizontal && !this.$bar.hasClass('slider__bar_horizontal')) {\n            this.$bar.addClass('slider__bar_horizontal');\n        }\n        if (newData.range) {\n            this.createRangeElement();\n        }\n        if (!newData.range && this.$range) {\n            this.destroyRangeElement();\n        }\n        if (!this.isRendered) {\n            this.$view.append(this.$bar);\n            this.isRendered = true;\n            this.attachEventHandlers();\n        }\n    };\n    SliderBar.prototype.destroy = function () {\n        this.$bar.off('click');\n        this.$bar.remove();\n        this.isRendered = false;\n    };\n    SliderBar.prototype.attachEventHandlers = function () {\n        this.$bar.on('click', this.clickHandler.bind(this));\n    };\n    SliderBar.prototype.clickHandler = function (event) {\n        var $startEvent = $.Event('startChanging.myMVPSlider');\n        this.$view.trigger($startEvent);\n        var clickCoord;\n        var selectedVal;\n        var elem = event.currentTarget;\n        var elemMetrics = elem.getBoundingClientRect();\n        var options = $(elem).data('options');\n        if (options.isHorizontal) {\n            clickCoord = event.clientX - elemMetrics.x;\n            selectedVal = (clickCoord / elemMetrics.width) * 100;\n        }\n        else {\n            clickCoord = event.clientY - elemMetrics.y;\n            selectedVal = (clickCoord / elemMetrics.height) * 100;\n        }\n        var currentData = $(elem).data('data');\n        var isSecond = false;\n        if (Array.isArray(currentData)) {\n            var average = (currentData[1] + currentData[0]) / 2;\n            isSecond = selectedVal > average;\n        }\n        var eventData = [selectedVal, isSecond];\n        var $changeEvent = $.Event('changeValue.myMVPSlider');\n        this.$view.trigger($changeEvent, eventData);\n        var $finishEvent = $.Event('finish.myMVPSlider');\n        this.$view.trigger($finishEvent, eventData);\n    };\n    SliderBar.prototype.createRangeElement = function () {\n        var _a = this.$bar.data(), options = _a.options, data = _a.data;\n        if (!this.$range) {\n            this.$range = $('<div>', { class: 'slider__range' });\n            this.$range.data('have-handler', false);\n            this.$bar.append(this.$range);\n        }\n        if (options.isHorizontal) {\n            if (Array.isArray(data)) {\n                var value = data[0], secondValue = data[1];\n                this.$range.css({\n                    left: value + \"%\",\n                    width: secondValue - value + \"%\",\n                    'border-radius': '0.75rem',\n                });\n            }\n            else {\n                this.$range.css({\n                    width: data + \"%\",\n                    'border-top-left-radius': '0.75rem',\n                    'border-bottom-left-radius': '0.75rem',\n                });\n            }\n        }\n        else if (Array.isArray(data)) {\n            var value = data[0], secondValue = data[1];\n            this.$range.css({\n                top: value + \"%\",\n                height: secondValue - value + \"%\",\n                'border-radius': '0.75rem',\n            });\n        }\n        else {\n            this.$range.css({\n                height: data + \"%\",\n            });\n        }\n        var haveHandler = this.$range.data('have-handler');\n        var isDragable = options.dragInterval && Array.isArray(data);\n        if (isDragable && !haveHandler) {\n            this.$range.css({ cursor: 'grab' });\n            this.$range.on('mousedown.bar', this.dragStartHandler.bind(this));\n            this.$range.data('have-handler', true);\n            this.$range[0].onclick = function (e) {\n                e.stopPropagation();\n            };\n            this.$range.on('dragstart.bar', false);\n        }\n        if (!isDragable && haveHandler) {\n            this.$range.css({ cursor: 'default' });\n            this.$range.off('mousedown.bar');\n            this.$range.data('have-handler', false);\n            this.$range[0].onclick = null;\n            this.$range.off('dragstart.bar');\n        }\n    };\n    SliderBar.prototype.dragStartHandler = function (event) {\n        var _this = this;\n        this.$range.css({ cursor: 'grabbing' });\n        var startCoord;\n        var viewMetrics = this.$view[0].getBoundingClientRect();\n        if (this.$bar.data('options').isHorizontal) {\n            startCoord = ((event.clientX - viewMetrics.x) / viewMetrics.width) * 100;\n        }\n        else {\n            startCoord = ((event.clientY - viewMetrics.y) / viewMetrics.height) * 100;\n        }\n        var $startEvent = $.Event('startChanging.myMVPSlider');\n        var isDragStarted = true;\n        this.$view.trigger($startEvent, [isDragStarted]);\n        var dragHandler = this.makeDragHandler(startCoord);\n        this.$view.parent('.js-slider__container').on('mousemove.bar', dragHandler);\n        document.onmouseup = function () {\n            _this.$view.parent('.js-slider__container').off('mousemove.bar', dragHandler);\n            _this.$view.parent('.js-slider__container').css({ cursor: 'grab' });\n            var $dropEvent = $.Event('dropRange.myMVPSlider');\n            _this.$view.parent('.js-slider__container').trigger($dropEvent);\n            document.onmouseup = null;\n        };\n    };\n    SliderBar.prototype.makeDragHandler = function (start) {\n        var _this = this;\n        var dragHandler = function (event) {\n            var newCoord;\n            var viewMetrics = _this.$view[0].getBoundingClientRect();\n            if (_this.$bar.data('options').isHorizontal) {\n                newCoord = ((event.clientX - viewMetrics.x) / viewMetrics.width) * 100;\n            }\n            else {\n                newCoord = ((event.clientY - viewMetrics.y) / viewMetrics.height) * 100;\n            }\n            var dragDistance = newCoord - start;\n            var $dragRangeEvent = $.Event('dragRange.myMVPSlider');\n            _this.$view.parent('.js-slider__container').trigger($dragRangeEvent, [dragDistance]);\n        };\n        return dragHandler;\n    };\n    SliderBar.prototype.destroyRangeElement = function () {\n        this.$range.remove();\n    };\n    SliderBar.createBar = function () {\n        var $bar = $('<div>', {\n            class: 'js-slider__bar slider__bar',\n        });\n        return $bar;\n    };\n    return SliderBar;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderBar);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.ts?");

/***/ }),

/***/ "./src/model/model.ts":
/*!****************************!*\
  !*** ./src/model/model.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar SliderModel = /** @class */ (function () {\n    function SliderModel(options) {\n        if (SliderModel.validateInitOptions(options)) {\n            this.maxValue = options.maxValue;\n            this.minValue = options.minValue;\n            this.step = options.step;\n        }\n        else {\n            this.maxValue = 10;\n            this.minValue = 0;\n            this.step = 1;\n        }\n        this.observers = new Set();\n        this.value = options.value;\n        if (options.secondValue !== undefined) {\n            this.secondValue = options.secondValue;\n        }\n        if (options.lockedValues !== undefined) {\n            this.lockedValues = new Set(options.lockedValues);\n        }\n        else {\n            this.lockedValues = new Set();\n        }\n        this.isReadyNotify = true;\n        this.isUpdated = true;\n    }\n    Object.defineProperty(SliderModel.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            if (this._ableToChange('value', newValue)) {\n                var oldValue = this._value;\n                if (this._value === undefined) {\n                    this._value = this._minValue;\n                }\n                var fixedValue = this._getMultipleStep(newValue);\n                if (this._secondValue !== undefined && fixedValue >= this._secondValue) {\n                    this._value = this._secondValue;\n                    this.isUpdated = false;\n                }\n                else if (oldValue !== fixedValue) {\n                    this._value = fixedValue;\n                    this.isUpdated = false;\n                }\n                if (oldValue !== this._value) {\n                    this.notify();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderModel.prototype, \"maxValue\", {\n        get: function () {\n            return this._maxValue;\n        },\n        set: function (newValue) {\n            if (this._ableToChange('maxValue', newValue)) {\n                this._maxValue = newValue;\n                this.isUpdated = false;\n                if (this._value !== undefined) {\n                    this.value = this._value;\n                }\n                if (this._secondValue !== undefined) {\n                    this.secondValue = this._secondValue;\n                }\n                if (!this.isUpdated) {\n                    this.notify();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderModel.prototype, \"minValue\", {\n        get: function () {\n            return this._minValue;\n        },\n        set: function (newValue) {\n            if (this._ableToChange('minValue', newValue)) {\n                this._minValue = newValue;\n                this.isUpdated = false;\n                if (this._secondValue !== undefined) {\n                    this.secondValue = this._secondValue;\n                }\n                if (this._value !== undefined) {\n                    this.value = this._value;\n                }\n                if (!this.isUpdated) {\n                    this.notify();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderModel.prototype, \"step\", {\n        get: function () {\n            return this._step;\n        },\n        set: function (newValue) {\n            if (this._ableToChange('step', newValue)) {\n                this._step = +newValue.toFixed(17);\n                this.isUpdated = false;\n                if (this._value !== undefined) {\n                    this.value = this._value;\n                }\n                if (this._secondValue !== undefined) {\n                    this.secondValue = this._secondValue;\n                }\n                if (!this.isUpdated) {\n                    this.notify();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderModel.prototype, \"secondValue\", {\n        get: function () {\n            return this._secondValue;\n        },\n        set: function (newValue) {\n            if (this._ableToChange('secondValue', newValue)) {\n                var _a = this, _value = _a._value, oldValue = _a._secondValue;\n                if (newValue !== undefined) {\n                    var fixedValue = this._getMultipleStep(newValue);\n                    if (fixedValue <= _value) {\n                        this._secondValue = _value;\n                        this.isUpdated = oldValue === _value;\n                    }\n                    else if (oldValue !== fixedValue) {\n                        this._secondValue = fixedValue;\n                        this.isUpdated = false;\n                    }\n                }\n                else {\n                    this._secondValue = undefined;\n                }\n                if (oldValue !== this._secondValue) {\n                    this.notify();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SliderModel.prototype.addObserver = function (observer) {\n        this.observers.add(observer);\n    };\n    SliderModel.prototype.removeObserver = function (observer) {\n        this.observers.delete(observer);\n    };\n    SliderModel.prototype.getState = function () {\n        var state = {\n            maxValue: this._maxValue,\n            minValue: this._minValue,\n            value: this._value,\n            step: this._step,\n            lockedValues: Array.from(this.lockedValues),\n        };\n        if (this._secondValue !== undefined) {\n            state.secondValue = this._secondValue;\n        }\n        return state;\n    };\n    SliderModel.prototype.updateState = function (state) {\n        var newState = __assign(__assign({}, this.getState()), state);\n        this.isReadyNotify = false;\n        if (newState.maxValue > newState.minValue) {\n            this._maxValue = newState.maxValue;\n            this._minValue = newState.minValue;\n        }\n        this.step = newState.step;\n        this.value = newState.value;\n        this.secondValue = newState.secondValue;\n        this.isReadyNotify = true;\n        if (!this.isUpdated)\n            this.notify();\n    };\n    SliderModel.prototype.lockState = function (props) {\n        var _this = this;\n        if (Array.isArray(props)) {\n            props.forEach(function (valueName) {\n                switch (valueName) {\n                    case 'minValue':\n                        _this.lockedValues.add('minValue');\n                        break;\n                    case 'maxValue':\n                        _this.lockedValues.add('maxValue');\n                        break;\n                    case 'step':\n                        _this.lockedValues.add('step');\n                        break;\n                    case 'value':\n                        _this.lockedValues.add('value');\n                        break;\n                    case 'secondValue':\n                        _this.lockedValues.add('secondValue');\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n        else if (props === 'all') {\n            this.lockedValues.add('maxValue');\n            this.lockedValues.add('minValue');\n            this.lockedValues.add('step');\n            this.lockedValues.add('value');\n            this.lockedValues.add('secondValue');\n        }\n    };\n    SliderModel.prototype.unlockState = function (props) {\n        var _this = this;\n        if (Array.isArray(props)) {\n            props.forEach(function (valueName) {\n                switch (valueName) {\n                    case 'minValue':\n                        _this.lockedValues.delete('minValue');\n                        break;\n                    case 'maxValue':\n                        _this.lockedValues.delete('maxValue');\n                        break;\n                    case 'step':\n                        _this.lockedValues.delete('step');\n                        break;\n                    case 'value':\n                        _this.lockedValues.delete('value');\n                        break;\n                    case 'secondValue':\n                        _this.lockedValues.delete('secondValue');\n                        break;\n                    default:\n                        break;\n                }\n            });\n        }\n        else if (props === 'all') {\n            this.lockedValues.clear();\n        }\n    };\n    SliderModel.prototype.notify = function () {\n        if (this._checkObservers() && this.isReadyNotify) {\n            this.observers.forEach(function (observer) {\n                observer.update();\n            });\n            this.isUpdated = true;\n        }\n    };\n    SliderModel.prototype._checkObservers = function () {\n        return (this.observers !== undefined && this.observers.size !== 0);\n    };\n    SliderModel.prototype._getMultipleStep = function (value) {\n        var _a = this, step = _a._step, max = _a._maxValue, min = _a._minValue;\n        var result;\n        switch (true) {\n            case (value >= max):\n                result = max;\n                break;\n            case (value <= min):\n                result = min;\n                break;\n            case (((value % step) / step > 0.5)):\n                result = (value - (value % step) + step);\n                break;\n            default:\n                result = (value - (value % step));\n                break;\n        }\n        return SliderModel.fixVal(result, step);\n    };\n    SliderModel.prototype._isLocked = function (value) {\n        return (this.lockedValues !== undefined && this.lockedValues.has(value));\n    };\n    SliderModel.prototype._ableToChange = function (value, newValue) {\n        var isValid = SliderModel._validate(newValue);\n        var isLocked = this._isLocked(value);\n        var isEqual;\n        var isUndefined;\n        var isGreaterThenMin;\n        var isLessThenMax;\n        switch (value) {\n            case 'value':\n                return (isValid && !isLocked);\n            case 'secondValue':\n                return (newValue === undefined) || (isValid && !isLocked);\n            case 'maxValue':\n                isEqual = (newValue === this._maxValue);\n                isUndefined = (this._maxValue === undefined);\n                isGreaterThenMin = (this._minValue === undefined || newValue > this._minValue);\n                return isUndefined || (isValid && !isLocked && !isEqual && isGreaterThenMin);\n            case 'minValue':\n                isEqual = (newValue === this._minValue);\n                isUndefined = (this._minValue === undefined);\n                isLessThenMax = (this._maxValue === undefined || newValue < this._maxValue);\n                return isUndefined || (isValid && !isLocked && !isEqual && isLessThenMax);\n            case 'step':\n                isEqual = (newValue === this._step);\n                isUndefined = (this._step === undefined);\n                return isUndefined || (isValid && !isLocked && !isEqual && (newValue > 0));\n            default:\n                return false;\n        }\n    };\n    SliderModel._validate = function (value) {\n        return !(value === null || Number.isNaN(value) || !Number.isFinite(value));\n    };\n    SliderModel.validateInitOptions = function (options) {\n        var hasMaxVal = Object.prototype.hasOwnProperty.call(options, 'maxValue');\n        var hasMinVal = Object.prototype.hasOwnProperty.call(options, 'minValue');\n        var hasStep = Object.prototype.hasOwnProperty.call(options, 'step');\n        var isMaxGreaterMin = options.maxValue > options.minValue;\n        var isStepPositive = options.step > 0;\n        return hasMaxVal && hasMinVal && hasStep && isMaxGreaterMin && isStepPositive;\n    };\n    SliderModel.fixVal = function (value, baseVal) {\n        if (!(baseVal % 1)) {\n            return +value.toFixed(0);\n        }\n        var base = (\"\" + baseVal).split('.')[1].length;\n        var fixedVal = +value.toFixed(base);\n        return fixedVal;\n    };\n    return SliderModel;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderModel);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/model/model.ts?");

/***/ }),

/***/ "./src/plugin/plugin.ts":
/*!******************************!*\
  !*** ./src/plugin/plugin.ts ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app/app */ \"./src/app/app.ts\");\n/* eslint-disable no-param-reassign */\n\n(function ($) {\n    $.fn.myMVPSlider = function (options) {\n        var settings = $.extend({\n            maxValue: 100,\n            minValue: 0,\n            step: 1,\n            value: 0,\n            secondValue: undefined,\n            // view\n            isHorizontal: true,\n            range: false,\n            dragInterval: false,\n            runner: true,\n            bar: true,\n            scale: false,\n            scaleStep: 1,\n            displayScaleValue: false,\n            displayValue: false,\n            displayMin: false,\n            displayMax: false,\n            prefix: '',\n            postfix: '',\n            // presenter\n            dataValues: [],\n            // callbacks\n            onStart: function () { },\n            onChange: function () { },\n            onFinish: function () { },\n            onUpdate: function () { },\n        }, options);\n        this.each(function addPlugin() {\n            var $this = $(this);\n            var app = new _app_app__WEBPACK_IMPORTED_MODULE_0__[\"default\"](settings, this);\n            $this.data('myMVPSlider', app);\n        });\n        return this;\n    };\n}(jQuery));\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/plugin/plugin.ts?");

/***/ }),

/***/ "./src/presenter/presenter.ts":
/*!************************************!*\
  !*** ./src/presenter/presenter.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/model */ \"./src/model/model.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar SliderPresenter = /** @class */ (function () {\n    function SliderPresenter(options) {\n        this.model = options.model;\n        this.view = options.view;\n        if (options.dataValues !== undefined && options.dataValues.length) {\n            this.updateDataValues(options.dataValues);\n        }\n        else {\n            this.dataValues = [];\n        }\n        this.renderData = this.createDataValues();\n        this.callbacks = {\n            onStart: options.onStart,\n            onChange: options.onChange,\n            onFinish: options.onFinish,\n            onUpdate: options.onUpdate,\n        };\n        this.isChanging = false;\n        this.subscribeToModel();\n        this.subscribeToView();\n        this.renderView();\n    }\n    SliderPresenter.prototype.update = function (options) {\n        var modelOptions = {\n            maxValue: options.maxValue,\n            minValue: options.minValue,\n            step: options.step,\n            value: options.value,\n        };\n        if (Object.prototype.hasOwnProperty.call(options, 'secondValue')) {\n            modelOptions.secondValue = options.secondValue;\n        }\n        var viewOptions = {\n            isHorizontal: options.isHorizontal,\n            range: options.range,\n            dragInterval: options.dragInterval,\n            runner: options.runner,\n            bar: options.bar,\n            scale: options.scale,\n            scaleStep: options.scaleStep,\n            displayScaleValue: options.displayScaleValue,\n            displayValue: options.displayValue,\n            displayMin: options.displayMin,\n            displayMax: options.displayMax,\n            prefix: options.prefix,\n            postfix: options.postfix,\n        };\n        if (!SliderPresenter.isEmpty(viewOptions)) {\n            this.view.update(viewOptions);\n        }\n        if (!SliderPresenter.isEmpty(modelOptions) || Object.prototype.hasOwnProperty.call(options, 'secondValue')) {\n            this.model.updateState(modelOptions);\n        }\n        this.callbacks.onUpdate();\n    };\n    SliderPresenter.prototype.getAllData = function () {\n        var data = __assign(__assign(__assign({}, this.getModelData()), this.getViewData()), this.getPresenterData());\n        return data;\n    };\n    SliderPresenter.prototype.getModelData = function () {\n        return this.model.getState();\n    };\n    SliderPresenter.prototype.getViewData = function () {\n        return this.view.getData();\n    };\n    SliderPresenter.prototype.getPresenterData = function () {\n        return {\n            dataValues: this.dataValues,\n            renderData: this.renderData,\n        };\n    };\n    SliderPresenter.prototype.setUserData = function (data) {\n        if (Array.isArray(data) && data.length > 0) {\n            this.updateDataValues(data);\n            this.renderData = this.createDataValues();\n        }\n        else if (!Array.isArray(data) && _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validateInitOptions(data)) {\n            this.dataValues = [];\n            this.model.unlockState(['maxValue', 'minValue', 'step']);\n            if (Object.prototype.hasOwnProperty.call(data, 'lockedValues')) {\n                this.model.lockState(data.lockedValues);\n            }\n            this.model.updateState(data);\n        }\n    };\n    SliderPresenter.prototype.createDataValues = function (data) {\n        if (this.dataValues.length > 0) {\n            return this.dataValues;\n        }\n        var _a = data || this.model.getState(), min = _a.minValue, max = _a.maxValue, step = _a.step;\n        var values = [];\n        for (var i = min; i <= max; i += step) {\n            var fixed = _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(i, step);\n            values.push(fixed);\n        }\n        if (values[values.length - 1] < max) {\n            values.push(max);\n        }\n        return values;\n    };\n    SliderPresenter.prototype.subscribeToModel = function () {\n        var _this = this;\n        this.modelObserver = {\n            update: function () {\n                var updatedModelState = _this.getModelData();\n                _this.renderData = _this.createDataValues(updatedModelState);\n                if (_this.isChanging) {\n                    _this.callbacks.onChange(updatedModelState);\n                }\n                _this.renderView();\n            },\n        };\n        this.model.addObserver(this.modelObserver);\n    };\n    SliderPresenter.prototype.subscribeToView = function () {\n        var _this = this;\n        this.viewObserver = {\n            start: function () {\n                _this.callbacks.onStart(_this.getModelData());\n            },\n            change: function (values) {\n                _this.isChanging = true;\n                var convertedValues = _this.convertPercentToValue(values);\n                if (Array.isArray(convertedValues)) {\n                    var newValue = convertedValues[0], newSecondValue = convertedValues[1];\n                    _this.model.updateState({ value: newValue, secondValue: newSecondValue });\n                }\n                else {\n                    _this.model.updateState({ value: convertedValues });\n                }\n            },\n            finish: function () {\n                _this.callbacks.onFinish(_this.getModelData());\n            },\n        };\n        this.view.addObserver(this.viewObserver);\n    };\n    SliderPresenter.prototype.renderView = function () {\n        var values;\n        var currentValue = this.getModelData().value;\n        var secondValue = this.getModelData().secondValue;\n        if (this.getViewData().range && secondValue !== undefined) {\n            values = [currentValue, secondValue];\n        }\n        var value = values || currentValue;\n        var percentage = this.convertValueToPercent(value);\n        var percentageData = this.createPercentageData();\n        var viewRenderData = {\n            data: this.renderData,\n            percentageData: percentageData,\n            value: value,\n            percentage: percentage,\n        };\n        this.view.render(viewRenderData);\n    };\n    SliderPresenter.prototype.updateDataValues = function (values) {\n        this.dataValues = values;\n        this.model.updateState({\n            maxValue: values.length - 1,\n            minValue: 0,\n            step: 1,\n        });\n        this.model.lockState(['maxValue', 'minValue', 'step']);\n    };\n    SliderPresenter.prototype.convertPercentToValue = function (percentage) {\n        var _a = this.getModelData(), minValue = _a.minValue, maxValue = _a.maxValue;\n        var value;\n        var secondValue;\n        var values;\n        if (Array.isArray(percentage)) {\n            var firstPercent = percentage[0], secondPercent = percentage[1];\n            value = ((maxValue - minValue) / 100) * firstPercent + minValue;\n            secondValue = ((maxValue - minValue) / 100) * secondPercent + minValue;\n            values = [value, secondValue];\n        }\n        else {\n            values = ((maxValue - minValue) / 100) * percentage + minValue;\n        }\n        return values;\n    };\n    SliderPresenter.prototype.convertValueToPercent = function (values) {\n        var _a = this.getModelData(), minValue = _a.minValue, maxValue = _a.maxValue, step = _a.step;\n        var firstPercentage;\n        var secondPercentage;\n        var percentage;\n        var baseValue = step / (maxValue - minValue);\n        if (Array.isArray(values)) {\n            var firstValue = values[0], secondValue = values[1];\n            firstPercentage = ((firstValue - minValue) / (maxValue - minValue)) * 100;\n            var fixedFirst = _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(firstPercentage, baseValue);\n            secondPercentage = ((secondValue - minValue) / (maxValue - minValue)) * 100;\n            var fixedSecond = _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(secondPercentage, baseValue);\n            percentage = [fixedFirst, fixedSecond];\n        }\n        else {\n            var p = ((values - minValue) / (maxValue - minValue)) * 100;\n            percentage = _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(p, baseValue);\n        }\n        return percentage;\n    };\n    SliderPresenter.prototype.createPercentageData = function () {\n        var _a = this.model.getState(), min = _a.minValue, max = _a.maxValue, step = _a.step;\n        var values = [];\n        var baseValue = step / (max - min);\n        for (var i = min; i <= max; i += step) {\n            var fixed = _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(i, baseValue);\n            values.push(fixed);\n        }\n        if (values[values.length - 1] < max) {\n            values.push(max);\n        }\n        var percentageData = values.map(function (val) {\n            var percentage = ((val - min) / (max - min)) * 100;\n            return _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(percentage, baseValue);\n        });\n        return percentageData;\n    };\n    SliderPresenter.isEmpty = function (object) {\n        var entries = Object.entries(object);\n        var isEmpty = true;\n        entries.forEach(function (entry) {\n            if (entry[1] !== undefined) {\n                isEmpty = false;\n            }\n        });\n        return isEmpty;\n    };\n    return SliderPresenter;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderPresenter);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/presenter/presenter.ts?");

/***/ }),

/***/ "./src/runner/runner.css":
/*!*******************************!*\
  !*** ./src/runner/runner.css ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./runner.css */ \"./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.css?");

/***/ }),

/***/ "./src/runner/runner.ts":
/*!******************************!*\
  !*** ./src/runner/runner.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _runner_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runner.css */ \"./src/runner/runner.css\");\n/* harmony import */ var _runner_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_runner_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar SliderRunner = /** @class */ (function () {\n    function SliderRunner(options) {\n        this.$barContainer = options.$viewContainer;\n        this.$view = this.$barContainer.parent('.js-slider__container');\n        this.$runner = SliderRunner.createRunner();\n        this.isRendered = false;\n        this.isSecond = (options.isSecond === true);\n    }\n    SliderRunner.prototype.update = function (data, options) {\n        var currentData = this.$runner.data('options');\n        var defaultOptions = { isHorizontal: true };\n        var runnerOptions = __assign(__assign(__assign({}, defaultOptions), currentData), options);\n        if (runnerOptions.isHorizontal && !this.$runner.hasClass('slider__runner_horizontal')) {\n            this.$runner.addClass('slider__runner_horizontal');\n        }\n        if (!runnerOptions.isHorizontal && this.$runner.hasClass('slider__runner_horizontal')) {\n            this.$runner.removeClass('slider__runner_horizontal');\n        }\n        if (this.isSecond) {\n            this.$runner.addClass('runner_second');\n        }\n        else {\n            this.$runner.addClass('runner_first');\n        }\n        if (!this.isRendered) {\n            this.$barContainer.append(this.$runner);\n            this.attacheEventHandlers();\n            this.isRendered = true;\n        }\n        var runnerMetrics = this.$runner[0].getBoundingClientRect();\n        var runnerWidth = runnerMetrics.width;\n        var value;\n        var percentage;\n        if (Array.isArray(data.percentage) && Array.isArray(data.value)) {\n            var _a = data.value, from = _a[0], to = _a[1];\n            var _b = data.percentage, fromPercentage = _b[0], toPercentage = _b[1];\n            var fromPosition = void 0;\n            var toPosition = void 0;\n            switch (fromPercentage) {\n                case 0:\n                    fromPosition = fromPercentage + \"%\";\n                    break;\n                default:\n                    fromPosition = \"calc(\" + fromPercentage + \"% - \" + runnerWidth / 2 + \"px)\";\n                    break;\n            }\n            switch (toPercentage) {\n                case 100:\n                    toPosition = \"calc(100% - \" + runnerWidth + \"px)\";\n                    break;\n                default:\n                    toPosition = \"calc(\" + toPercentage + \"% - \" + runnerWidth / 2 + \"px)\";\n                    break;\n            }\n            value = this.isSecond ? to : from;\n            percentage = this.isSecond ? toPosition : fromPosition;\n        }\n        if (!Array.isArray(data.percentage) && !Array.isArray(data.value)) {\n            switch (data.percentage) {\n                case 0:\n                    percentage = '0%';\n                    break;\n                case 100:\n                    percentage = \"calc(100% - \" + runnerWidth + \"px)\";\n                    break;\n                default:\n                    percentage = \"calc(\" + data.percentage + \"% - \" + runnerWidth / 2 + \"px)\";\n                    break;\n            }\n            value = data.value;\n        }\n        this.$runner.data('options', runnerOptions);\n        this.$runner.data('value', value);\n        if (options.isHorizontal) {\n            this.$runner.css({ left: percentage });\n        }\n        else {\n            this.$runner.css({ top: percentage });\n        }\n    };\n    SliderRunner.prototype.destroy = function () {\n        this.$runner.off('mousedown.runner');\n        this.$view.off('mousemove.runner');\n        this.$runner.remove();\n        this.isRendered = false;\n    };\n    SliderRunner.prototype.attacheEventHandlers = function () {\n        this.$runner.on('mousedown.runner', this.dragStartHandler.bind(this));\n        this.$runner.on('dragstart', false);\n    };\n    SliderRunner.prototype.dragStartHandler = function (event) {\n        var _this = this;\n        var $startEvent = $.Event('startChanging.myMVPSlider');\n        this.$view.trigger($startEvent);\n        var runner = event.currentTarget;\n        var renderOptions = $(runner).data('options');\n        this.$runner.css('cursor', 'grabbing');\n        var mouseMoveHandler = this.makeHandler(renderOptions);\n        this.$view.on('mousemove.runner', mouseMoveHandler);\n        document.onmouseup = function () {\n            _this.$view.off('mousemove.runner', mouseMoveHandler);\n            _this.$runner.css('cursor', 'grab');\n            var $finishEvent = $.Event('finish.myMVPSlider');\n            _this.$view.trigger($finishEvent);\n            document.onmouseup = null;\n        };\n    };\n    SliderRunner.prototype.makeHandler = function (opts) {\n        var _this = this;\n        var moveCoord;\n        var selectedVal;\n        var view = this.$view[0];\n        var elemMetrics = view.getBoundingClientRect();\n        var mouseMoveHandler = function (e) {\n            if (opts.isHorizontal) {\n                moveCoord = e.clientX - elemMetrics.x;\n                selectedVal = (moveCoord / elemMetrics.width) * 100;\n            }\n            else {\n                moveCoord = e.clientY - elemMetrics.y;\n                selectedVal = (moveCoord / elemMetrics.height) * 100;\n            }\n            var $changeEvent = $.Event('changeValue.myMVPSlider');\n            _this.$view.trigger($changeEvent, [selectedVal, _this.isSecond]);\n        };\n        return mouseMoveHandler;\n    };\n    SliderRunner.createRunner = function () {\n        var $runner = $('<div>', {\n            class: 'js-slider__runner slider__runner',\n        });\n        return $runner;\n    };\n    return SliderRunner;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderRunner);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.ts?");

/***/ }),

/***/ "./src/scale/scale.css":
/*!*****************************!*\
  !*** ./src/scale/scale.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./scale.css */ \"./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.css?");

/***/ }),

/***/ "./src/scale/scale.ts":
/*!****************************!*\
  !*** ./src/scale/scale.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scale_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale.css */ \"./src/scale/scale.css\");\n/* harmony import */ var _scale_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scale_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\nvar SliderScale = /** @class */ (function () {\n    function SliderScale(options) {\n        this.$view = options.$viewContainer;\n        this.$scale = SliderScale.createScale();\n        this.isRendered = false;\n    }\n    SliderScale.prototype.update = function (opts) {\n        var _this = this;\n        var currentData = this.$scale.data('options');\n        var newData = opts.data, options = opts.options;\n        var defaultOptions = {\n            isHorizontal: true,\n            scaleStep: 1,\n            displayScaleStrips: true,\n            displayScaleValue: true,\n            displayMin: true,\n            displayMax: true,\n        };\n        var scaleOptions = __assign(__assign(__assign({}, defaultOptions), currentData), options);\n        this.$scale.data('data', newData);\n        this.$scale.data('options', scaleOptions);\n        if (scaleOptions.isHorizontal && !this.$scale.hasClass('slider__scale_horizontal')) {\n            this.$scale.addClass('slider__scale_horizontal');\n        }\n        if (!scaleOptions.isHorizontal && this.$scale.hasClass('slider__scale_horizontal')) {\n            this.$scale.removeClass('slider__scale_horizontal');\n        }\n        if (!this.isRendered) {\n            this.$view.append(this.$scale);\n            this.attachEventHandlers();\n            this.isRendered = true;\n        }\n        var data = newData.data, percentageData = newData.percentageData;\n        this.$scale.empty();\n        data.forEach(function (elem, idx, arr) {\n            var content;\n            switch (true) {\n                case (!scaleOptions.displayMin && idx === 0):\n                case (!scaleOptions.displayMax && idx === (arr.length - 1)):\n                    content = '';\n                    break;\n                case (idx % scaleOptions.scaleStep !== 0):\n                    content = '';\n                    break;\n                default:\n                    content = elem.toString();\n                    break;\n            }\n            if (content !== '') {\n                var value = percentageData[idx];\n                var $elem = SliderScale.createElement(content, value, scaleOptions);\n                _this.$scale.append($elem);\n                var elemMetrics = $elem[0].getBoundingClientRect();\n                if (options.isHorizontal) {\n                    switch (value) {\n                        case 100:\n                            $elem.css({\n                                right: '0%',\n                                'align-items': 'flex-end',\n                            });\n                            break;\n                        case 0:\n                            $elem.css('left', value + \"%\");\n                            break;\n                        default:\n                            $elem.css({\n                                left: \"calc(\" + value + \"% - \" + elemMetrics.width / 2 + \"px)\",\n                                'align-items': 'center',\n                            });\n                            break;\n                    }\n                }\n                else {\n                    switch (value) {\n                        case 100:\n                            $elem.css('bottom', '0%');\n                            break;\n                        default:\n                            $elem.css('top', value + \"%\");\n                            break;\n                    }\n                }\n            }\n        });\n    };\n    SliderScale.prototype.destroy = function () {\n        this.$scale.off('click');\n        this.$scale.remove();\n        this.isRendered = false;\n    };\n    SliderScale.prototype.attachEventHandlers = function () {\n        this.$scale.on('click', this.clickEventListener.bind(this));\n    };\n    SliderScale.prototype.clickEventListener = function (event) {\n        var elem = event.target;\n        var selectedVal;\n        if (elem.classList.contains('scale__element')) {\n            selectedVal = $(elem).data('value');\n            var $startEvent = $.Event('startChanging.myMVPSlider');\n            this.$view.trigger($startEvent);\n            var currentData = this.$scale.data('data').percentage;\n            var isSecond = false;\n            if (Array.isArray(currentData)) {\n                var average = (currentData[1] + currentData[0]) / 2;\n                isSecond = selectedVal > average;\n            }\n            var eventData = [selectedVal, isSecond];\n            var $changeEvent = $.Event('changeValue.myMVPSlider');\n            this.$view.trigger($changeEvent, eventData);\n            var $finishEvent = $.Event('finish.myMVPSlider');\n            this.$view.trigger($finishEvent, eventData);\n        }\n    };\n    SliderScale.createScale = function () {\n        var $scaleContainer = $('<span>', {\n            class: 'js-slider__scale slider__scale',\n        });\n        return $scaleContainer;\n    };\n    SliderScale.createElement = function (content, value, options) {\n        var $elem = $('<span>', { class: 'scale__element' });\n        $elem.html(content);\n        $elem.data('value', value);\n        if (options.isHorizontal) {\n            $elem.addClass('scale__element_horizontal');\n        }\n        return $elem;\n    };\n    return SliderScale;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderScale);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.ts?");

/***/ }),

/***/ "./src/values-display/values-display.css":
/*!***********************************************!*\
  !*** ./src/values-display/values-display.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./values-display.css */ \"./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.css?");

/***/ }),

/***/ "./src/values-display/values-display.ts":
/*!**********************************************!*\
  !*** ./src/values-display/values-display.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _values_display_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./values-display.css */ \"./src/values-display/values-display.css\");\n/* harmony import */ var _values_display_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_values_display_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/* eslint-disable class-methods-use-this */\n\nvar SliderValuesDisplay = /** @class */ (function () {\n    function SliderValuesDisplay(options) {\n        this.$view = options.$viewContainer;\n        this.$displayContainer = SliderValuesDisplay.createValuesDisplayContainer();\n        this.isRendered = false;\n    }\n    SliderValuesDisplay.prototype.update = function (data, options) {\n        var currentOpts = this.$displayContainer.data('options');\n        var defaultOpts = {\n            isHorizontal: true,\n            prefix: '',\n            postfix: '',\n        };\n        var newOpts = __assign(__assign(__assign({}, defaultOpts), currentOpts), options);\n        // update valueDisplay elements\n        var value = data.value, percentage = data.percentage;\n        if (Array.isArray(value) && Array.isArray(percentage)) {\n            if (!this.$firstValDisplay) {\n                this.$firstValDisplay = $('<div>', { class: 'slider__display_value' });\n                this.$displayContainer.append(this.$firstValDisplay);\n            }\n            if (!this.$secondValDisplay) {\n                this.$secondValDisplay = $('<div>', { class: 'slider__display_value' });\n                this.$displayContainer.append(this.$secondValDisplay);\n            }\n        }\n        if (!Array.isArray(value) && !Array.isArray(percentage)) {\n            if (!this.$firstValDisplay) {\n                this.$firstValDisplay = $('<div>', { class: 'slider__display_value' });\n                this.$displayContainer.append(this.$firstValDisplay);\n            }\n            if (this.$secondValDisplay) {\n                this.$secondValDisplay.remove();\n                this.$secondValDisplay = undefined;\n            }\n        }\n        this.$displayContainer.data({ options: newOpts, data: data.value });\n        if (options.isHorizontal && !this.$displayContainer.hasClass('slider__display_container_horizontal')) {\n            this.$displayContainer.addClass('slider__display_container_horizontal');\n        }\n        if (!options.isHorizontal && this.$displayContainer.hasClass('slider__display_container_horizontal')) {\n            this.$displayContainer.removeClass('slider__display_container_horizontal');\n        }\n        if (!this.isRendered) {\n            this.$view.prepend(this.$displayContainer);\n            this.isRendered = true;\n        }\n        this.updateValueDisplay({ renderData: data, options: newOpts });\n    };\n    SliderValuesDisplay.prototype.destroy = function () {\n        this.$displayContainer.remove();\n        if (this.$firstValDisplay) {\n            this.$firstValDisplay.remove();\n            this.$firstValDisplay = null;\n        }\n        if (this.$secondValDisplay) {\n            this.$secondValDisplay.remove();\n            this.$secondValDisplay = null;\n        }\n        this.isRendered = false;\n    };\n    SliderValuesDisplay.prototype.updateValueDisplay = function (updateData) {\n        var renderData = updateData.renderData, options = updateData.options;\n        var data = renderData.data, percentage = renderData.percentage, percentageData = renderData.percentageData;\n        var firstIdx;\n        var secondIdx;\n        if (Array.isArray(percentage)) {\n            var from = percentage[0], to = percentage[1];\n            firstIdx = percentageData.indexOf(from);\n            var firstData = data[firstIdx].toString();\n            this.$firstValDisplay.data('data', firstData);\n            this.$firstValDisplay.data('options', options);\n            secondIdx = percentageData.indexOf(to);\n            var secondData = data[secondIdx].toString();\n            this.$secondValDisplay.data('data', secondData);\n            this.$secondValDisplay.data('options', options);\n            var firstHtml = options.prefix;\n            var secondHtml = options.prefix;\n            firstHtml += firstData;\n            secondHtml += secondData;\n            if (options.postfix !== '') {\n                firstHtml += options.postfix;\n                secondHtml += options.postfix;\n            }\n            this.$firstValDisplay.html(firstHtml);\n            this.$secondValDisplay.html(secondHtml);\n            var firstMetrics = this.$firstValDisplay[0].getBoundingClientRect();\n            var secondMetrics = this.$secondValDisplay[0].getBoundingClientRect();\n            var firstPos = void 0;\n            var secondPos = void 0;\n            switch (from) {\n                case 0:\n                    if (options.isHorizontal) {\n                        this.$firstValDisplay.css({ left: '0%' });\n                    }\n                    else {\n                        this.$firstValDisplay.css({ top: '0%' });\n                    }\n                    break;\n                default:\n                    if (options.isHorizontal) {\n                        firstPos = \"calc(\" + from + \"% - \" + firstMetrics.width / 2 + \"px)\";\n                        this.$firstValDisplay.css({ left: firstPos });\n                    }\n                    else {\n                        firstPos = \"calc(\" + from + \"% - \" + firstMetrics.height / 2 + \"px)\";\n                        this.$firstValDisplay.css({ top: firstPos });\n                    }\n                    break;\n            }\n            switch (to) {\n                case 100:\n                    if (options.isHorizontal) {\n                        secondPos = \"calc(\" + to + \"% - \" + secondMetrics.width + \"px)\";\n                        this.$secondValDisplay.css({ left: secondPos });\n                    }\n                    else {\n                        this.$secondValDisplay.css({ down: '0%' });\n                    }\n                    break;\n                default:\n                    if (options.isHorizontal) {\n                        secondPos = \"calc(\" + to + \"% - \" + secondMetrics.width / 2 + \"px)\";\n                        this.$secondValDisplay.css({ left: secondPos });\n                    }\n                    else {\n                        secondPos = \"calc(\" + to + \"% - \" + secondMetrics.height / 2 + \"px)\";\n                        this.$secondValDisplay.css({ top: secondPos });\n                    }\n                    break;\n            }\n        }\n        else {\n            firstIdx = percentageData.indexOf(percentage);\n            var firstData = data[firstIdx].toString();\n            this.$firstValDisplay.data('data', firstData);\n            this.$firstValDisplay.data('options', options);\n            var firstHtml = options.prefix;\n            firstHtml += firstData;\n            if (options.postfix !== '')\n                firstHtml += options.postfix;\n            this.$firstValDisplay.html(firstHtml);\n            if (options.isHorizontal) {\n                this.$firstValDisplay.css({ left: percentage + \"%\" });\n            }\n            else {\n                this.$firstValDisplay.css({ top: percentage + \"%\" });\n            }\n        }\n    };\n    SliderValuesDisplay.createValuesDisplayContainer = function () {\n        var $displayContainer = $('<div>', {\n            class: 'slider__display_container',\n        });\n        return $displayContainer;\n    };\n    return SliderValuesDisplay;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderValuesDisplay);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.ts?");

/***/ }),

/***/ "./src/view/view.css":
/*!***************************!*\
  !*** ./src/view/view.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./view.css */ \"./node_modules/css-loader/dist/cjs.js!./src/view/view.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.css?");

/***/ }),

/***/ "./src/view/view.ts":
/*!**************************!*\
  !*** ./src/view/view.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _view_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view.css */ \"./src/view/view.css\");\n/* harmony import */ var _view_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_view_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scale_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scale/scale */ \"./src/scale/scale.ts\");\n/* harmony import */ var _bar_bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bar/bar */ \"./src/bar/bar.ts\");\n/* harmony import */ var _runner_runner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runner/runner */ \"./src/runner/runner.ts\");\n/* harmony import */ var _values_display_values_display__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../values-display/values-display */ \"./src/values-display/values-display.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\n\n\n\nvar SliderView = /** @class */ (function () {\n    function SliderView(container, options) {\n        this.$container = $(container);\n        this.viewOptions = options;\n        this.observers = new Set();\n        this.$view = this.createView();\n        this.$barContainer = $('<div>', { class: 'slider__bar_container' });\n        this.$view.append(this.$barContainer);\n        this.isRendered = false;\n    }\n    SliderView.prototype.render = function (renderData) {\n        this.renderData = renderData;\n        if (this.viewOptions.isHorizontal && !this.$view.hasClass('slider__container_horizontal')) {\n            this.$view.addClass('slider__container_horizontal');\n        }\n        if (!this.viewOptions.isHorizontal && this.$view.hasClass('slider__container_horizontal')) {\n            this.$view.removeClass('slider__container_horizontal');\n        }\n        if (!this.isRendered) {\n            this.attachEventHandlers();\n            this.$container.append(this.$view);\n            this.isRendered = true;\n        }\n        this.updateValuesDisplay(renderData);\n        this.updateScale(renderData);\n        this.updateBar(renderData.percentage);\n        this.updateRunners(renderData);\n    };\n    SliderView.prototype.update = function (viewData) {\n        var state = __assign(__assign({}, this.viewOptions), this.validateData(viewData));\n        this.viewOptions = state;\n        this.$view.data('options', state);\n        if (this.renderData) {\n            this.render(this.renderData);\n        }\n    };\n    SliderView.prototype.addObserver = function (observer) {\n        this.observers.add(observer);\n    };\n    SliderView.prototype.removeObserver = function (observer) {\n        this.observers.delete(observer);\n    };\n    SliderView.prototype.getData = function () {\n        return this.viewOptions;\n    };\n    SliderView.prototype.destroy = function () {\n        if (this.bar)\n            this.bar.destroy();\n        if (this.scale)\n            this.scale.destroy();\n        if (this.runner)\n            this.runner.destroy();\n        if (this.secondRunner)\n            this.secondRunner.destroy();\n        if (this.valueDisplay)\n            this.valueDisplay.destroy();\n        this.$view.remove();\n        this.isRendered = false;\n    };\n    SliderView.prototype.createView = function () {\n        var viewOptions = this.viewOptions;\n        var $view = $('<div>', {\n            class: 'js-slider__container slider__container',\n        });\n        $view.data('options', viewOptions);\n        return $view;\n    };\n    SliderView.prototype.updateBar = function (percentage) {\n        if (this.viewOptions.bar && this.bar) {\n            this.bar.update({\n                data: percentage,\n                options: this.viewOptions,\n            });\n        }\n        if (this.viewOptions.bar && !this.bar) {\n            this.bar = new _bar_bar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({ $viewContainer: this.$barContainer });\n            this.bar.update({\n                data: percentage,\n                options: this.viewOptions,\n            });\n        }\n        if (!this.viewOptions.bar && this.bar) {\n            this.bar.destroy();\n        }\n    };\n    SliderView.prototype.updateScale = function (renderData) {\n        if (this.viewOptions.scale && this.scale) {\n            this.scale.update({\n                data: renderData,\n                options: this.viewOptions,\n            });\n        }\n        if (this.viewOptions.scale && !this.scale) {\n            this.scale = new _scale_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ $viewContainer: this.$view });\n            this.scale.update({\n                data: renderData,\n                options: this.viewOptions,\n            });\n        }\n        if (!this.viewOptions.scale && this.scale) {\n            this.scale.destroy();\n        }\n    };\n    SliderView.prototype.updateValuesDisplay = function (renderData) {\n        if (this.viewOptions.displayValue && this.valueDisplay) {\n            this.valueDisplay.update(renderData, this.viewOptions);\n        }\n        if (this.viewOptions.displayValue && !this.valueDisplay) {\n            this.valueDisplay = new _values_display_values_display__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({ $viewContainer: this.$view });\n            this.valueDisplay.update(renderData, this.viewOptions);\n        }\n        if (!this.viewOptions.displayValue && this.valueDisplay) {\n            this.valueDisplay.destroy();\n        }\n    };\n    SliderView.prototype.updateRunners = function (renderData) {\n        if (this.viewOptions.runner) {\n            if (Array.isArray(renderData.value)) {\n                if (this.runner) {\n                    this.runner.update(renderData, this.viewOptions);\n                }\n                else {\n                    this.runner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                        $viewContainer: this.$barContainer,\n                        isSecond: false,\n                    });\n                    this.runner.update(renderData, this.viewOptions);\n                }\n                if (this.secondRunner) {\n                    this.secondRunner.update(renderData, this.viewOptions);\n                }\n                else {\n                    this.secondRunner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                        $viewContainer: this.$barContainer,\n                        isSecond: true,\n                    });\n                    this.secondRunner.update(renderData, this.viewOptions);\n                }\n            }\n            else if (this.runner) {\n                this.runner.update(renderData, this.viewOptions);\n            }\n            else {\n                this.runner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n                    $viewContainer: this.$barContainer,\n                    isSecond: false,\n                });\n                this.runner.update(renderData, this.viewOptions);\n            }\n        }\n        else {\n            if (this.runner) {\n                this.runner.destroy();\n            }\n            if (this.secondRunner) {\n                this.secondRunner.destroy();\n            }\n        }\n        if (!this.viewOptions.range && this.secondRunner) {\n            this.secondRunner.destroy();\n        }\n    };\n    SliderView.prototype.notify = function (action) {\n        switch (action.event) {\n            case 'start':\n                this.observers.forEach(function (observer) {\n                    observer.start();\n                });\n                break;\n            case 'change':\n                this.observers.forEach(function (observer) {\n                    observer.change(action.value);\n                });\n                break;\n            case 'finish':\n                this.observers.forEach(function (observer) {\n                    observer.finish();\n                });\n                break;\n            default:\n                break;\n        }\n    };\n    SliderView.prototype.attachEventHandlers = function () {\n        this.$view.bind('startChanging.myMVPSlider', this.startChangingHandler.bind(this));\n        this.$view.bind('changeValue.myMVPSlider', this.changeValueHandler.bind(this));\n        this.$view.bind('finish.myMVPSlider', this.finishEventHandler.bind(this));\n    };\n    SliderView.prototype.startChangingHandler = function (event, isDragStarted) {\n        var startAction = { event: 'start' };\n        this.notify(startAction);\n        var startValue = this.renderData.percentage;\n        if (isDragStarted && Array.isArray(startValue)) {\n            var dragHandler = this.makeDragHandler(startValue);\n            var dropHandler = this.makeDropHandler();\n            this.$view.bind('dragRange.myMVPSlider', dragHandler);\n            this.$view.bind('dropRange.myMVPSlider', dropHandler);\n        }\n    };\n    SliderView.prototype.makeDragHandler = function (start) {\n        var _this = this;\n        var dragHandler = function (event, dragDistance) {\n            var valuesDiff = start[1] - start[0];\n            var newVal = start[0] + dragDistance;\n            var newSecondVal = start[1] + dragDistance;\n            if (newVal < 0) {\n                newVal = 0;\n                newSecondVal = newVal + valuesDiff;\n            }\n            if (newSecondVal > 100) {\n                newSecondVal = 100;\n                newVal = newSecondVal - valuesDiff;\n            }\n            var changeAction = { event: 'change', value: [newVal, newSecondVal] };\n            _this.notify(changeAction);\n        };\n        return dragHandler;\n    };\n    SliderView.prototype.makeDropHandler = function () {\n        var _this = this;\n        var dragHandler = function () {\n            var finishAction = { event: 'finish' };\n            _this.notify(finishAction);\n            _this.$view.unbind('dragRange.myMVPSlider', false);\n            _this.$view.unbind('dropRange.myMVPSlider', false);\n        };\n        return dragHandler;\n    };\n    SliderView.prototype.changeValueHandler = function (event, value, isSecond) {\n        var currentValue = this.renderData.percentage;\n        var changeAction;\n        if (isSecond && Array.isArray(currentValue)) {\n            changeAction = { event: 'change', value: [currentValue[0], value] };\n        }\n        else if (Array.isArray(currentValue)) {\n            changeAction = { event: 'change', value: [value, currentValue[1]] };\n        }\n        else {\n            changeAction = { event: 'change', value: value };\n        }\n        this.notify(changeAction);\n    };\n    SliderView.prototype.finishEventHandler = function () {\n        var finishAction = { event: 'finish' };\n        this.notify(finishAction);\n    };\n    SliderView.prototype.validateData = function (data) {\n        var _this = this;\n        var dataEntries = Object.entries(data);\n        var validData = dataEntries.map(function (entry) {\n            var key = entry[0];\n            switch (key) {\n                case 'isHorizontal':\n                case 'range':\n                case 'dragInterval':\n                case 'runner':\n                case 'bar':\n                case 'scale':\n                case 'displayScaleValue':\n                case 'displayValue':\n                case 'displayMin':\n                case 'displayMax':\n                    if (typeof entry[1] === 'boolean') {\n                        return entry;\n                    }\n                    break;\n                case 'scaleStep':\n                    if (SliderView.isValidStep(entry[1])) {\n                        return entry;\n                    }\n                    break;\n                case 'prefix':\n                case 'postfix':\n                    if (typeof entry[1] === 'string') {\n                        return entry;\n                    }\n                    break;\n                default:\n                    return undefined;\n            }\n            return [key, _this.viewOptions[key]];\n        });\n        var resultData = validData.reduce(function (acc, _a) {\n            var _b;\n            var k = _a[0], v = _a[1];\n            return (__assign(__assign({}, acc), (_b = {}, _b[k] = v, _b)));\n        }, {});\n        return resultData;\n    };\n    SliderView.isValidStep = function (value) {\n        if (typeof value === 'number') {\n            return Number.isFinite(value) && (value > 0);\n        }\n        return false;\n    };\n    return SliderView;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderView);\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.ts?");

/***/ })

/******/ });
});