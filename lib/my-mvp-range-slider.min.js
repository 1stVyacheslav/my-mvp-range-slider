(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("my-mvp-range-slider", [], factory);
	else if(typeof exports === 'object')
		exports["my-mvp-range-slider"] = factory();
	else
		root["my-mvp-range-slider"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/plugin/plugin.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__bar {\\r\\n  background-color: #E5E5E5;\\r\\n  border-radius: 0.75rem;\\r\\n  width: 0.5rem;\\r\\n  height: 100%;\\r\\n  cursor: pointer;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slider__bar_horizontal {\\r\\n  height: 0.5rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slider__range {\\r\\n  height: 100%;\\r\\n  background-color: #53B6A8;\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css":
/*!*********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__runner {\\n  width: 1.5rem;\\n  height: 1.5rem;\\n  position: absolute;\\n  border-radius: 50%;\\n  background-color: #53B6A8;\\n  cursor: grab;\\n  left: -0.5rem;\\n  z-index: 2;\\n}\\n\\n.slider__runner_horizontal {\\n  top: -0.5rem;\\n  left: 0;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css":
/*!*******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__scale {\\r\\n  height: 100%;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slider__scale_horizontal {\\r\\n  padding-top: 0.5rem;\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.scale__element {\\r\\n  position: absolute;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  cursor: pointer;\\r\\n  -webkit-touch-callout: none;\\r\\n  -webkit-user-select: none;\\r\\n  -khtml-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  color: #e5e5e5;\\r\\n  font-weight: bold;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css":
/*!*************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__display_container {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n  height: 100%;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.slider__display_container_horizontal {\\r\\n  height: 2rem;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.slider__display_value {\\r\\n  display: inline-block;\\r\\n  position: absolute;\\r\\n  color: white;\\r\\n  background-color: #53B6A8;\\r\\n  padding: 0.1rem 0.5rem 0.3rem;\\r\\n  border-radius: 0.4rem;\\r\\n  cursor: default;\\r\\n  -webkit-touch-callout: none;\\r\\n  -webkit-user-select: none;\\r\\n  -khtml-user-select: none;\\r\\n  -moz-user-select: none;\\r\\n  -ms-user-select: none;\\r\\n  user-select: none;\\r\\n  right: 0.8rem;\\r\\n}\\r\\n\\r\\n.slider__display_value_horizontal {\\r\\n  bottom: 0.7rem;\\r\\n  right: auto;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/view/view.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/view/view.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".slider__container {\\r\\n  padding: 0.75rem;\\r\\n  position: relative;\\r\\n  height: 100%;\\r\\n  width: auto;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n.slider__container_horizontal {\\r\\n  height: auto;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.slider__bar_container {\\r\\n  position: relative;\\r\\n  height: 100%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.slider__bar_container_horizontal {\\r\\n  height: auto;\\r\\n  width: 100%;\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack://my-mvp-range-slider/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://my-mvp-range-slider/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/app/app.ts":
/*!************************!*\
  !*** ./src/app/app.ts ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/model */ \"./src/model/model.ts\");\n/* harmony import */ var _presenter_presenter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../presenter/presenter */ \"./src/presenter/presenter.ts\");\n/* harmony import */ var _view_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../view/view */ \"./src/view/view.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\n\r\n\r\nvar SliderApp = /** @class */ (function () {\r\n    function SliderApp(options, node) {\r\n        this.initOptions = options;\r\n        this.node = node;\r\n        this.createModel();\r\n        this.createView();\r\n        this.createPresenter();\r\n    }\r\n    SliderApp.prototype.update = function (options) {\r\n        this.options = __assign(__assign(__assign({}, this.initOptions), this.options), options);\r\n        this.presenter.update(options);\r\n    };\r\n    SliderApp.prototype.setUserData = function (data) {\r\n        if (data.length > 1) {\r\n            this.presenter.setUserData(data);\r\n        }\r\n        else {\r\n            this.reset();\r\n        }\r\n    };\r\n    SliderApp.prototype.getAllData = function () {\r\n        var data = __assign(__assign(__assign({}, this.getModelData()), this.getViewData()), this.getPresenterData());\r\n        return data;\r\n    };\r\n    SliderApp.prototype.getModelData = function () {\r\n        return this.model.getState();\r\n    };\r\n    SliderApp.prototype.getViewData = function () {\r\n        return this.view.getData();\r\n    };\r\n    SliderApp.prototype.getPresenterData = function () {\r\n        return this.presenter.getPresenterData();\r\n    };\r\n    SliderApp.prototype.lockValues = function (values) {\r\n        this.presenter.update({ lockedValues: values });\r\n    };\r\n    SliderApp.prototype.unlockValues = function (values) {\r\n        this.presenter.update({ unlockValues: values });\r\n    };\r\n    SliderApp.prototype.reset = function () {\r\n        this.options = this.initOptions;\r\n        this.presenter.update(this.initOptions);\r\n    };\r\n    SliderApp.prototype.destroy = function () {\r\n        this.view.destroy();\r\n    };\r\n    SliderApp.prototype.createModel = function () {\r\n        var _a = this.initOptions, maxValue = _a.maxValue, minValue = _a.minValue, step = _a.step, value = _a.value, secondValue = _a.secondValue;\r\n        this.model = new _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\r\n            maxValue: maxValue,\r\n            minValue: minValue,\r\n            step: step,\r\n            value: value,\r\n            secondValue: secondValue,\r\n        });\r\n    };\r\n    SliderApp.prototype.createPresenter = function () {\r\n        var _a = this.initOptions, dataValues = _a.dataValues, onStart = _a.onStart, onChange = _a.onChange, onFinish = _a.onFinish, onUpdate = _a.onUpdate;\r\n        this.presenter = new _presenter_presenter__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\r\n            model: this.model,\r\n            view: this.view,\r\n            dataValues: dataValues,\r\n            onStart: onStart,\r\n            onChange: onChange,\r\n            onFinish: onFinish,\r\n            onUpdate: onUpdate,\r\n        });\r\n    };\r\n    SliderApp.prototype.createView = function () {\r\n        var _a = this.initOptions, isHorizontal = _a.isHorizontal, range = _a.range, dragInterval = _a.dragInterval, runner = _a.runner, bar = _a.bar, scale = _a.scale, displayScaleValue = _a.displayScaleValue, displayValue = _a.displayValue, numOfScaleVal = _a.numOfScaleVal, displayMin = _a.displayMin, displayMax = _a.displayMax, prefix = _a.prefix, postfix = _a.postfix;\r\n        this.view = new _view_view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.node, {\r\n            isHorizontal: isHorizontal,\r\n            range: range,\r\n            dragInterval: dragInterval,\r\n            runner: runner,\r\n            bar: bar,\r\n            scale: scale,\r\n            displayScaleValue: displayScaleValue,\r\n            displayValue: displayValue,\r\n            numOfScaleVal: numOfScaleVal,\r\n            displayMin: displayMin,\r\n            displayMax: displayMax,\r\n            prefix: prefix,\r\n            postfix: postfix,\r\n        });\r\n    };\r\n    return SliderApp;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderApp);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/app/app.ts?");

/***/ }),

/***/ "./src/bar/bar.css":
/*!*************************!*\
  !*** ./src/bar/bar.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./bar.css */ \"./node_modules/css-loader/dist/cjs.js!./src/bar/bar.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.css?");

/***/ }),

/***/ "./src/bar/bar.ts":
/*!************************!*\
  !*** ./src/bar/bar.ts ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _bar_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bar.css */ \"./src/bar/bar.css\");\n/* harmony import */ var _bar_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_bar_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nvar SliderBar = /** @class */ (function () {\r\n    function SliderBar(options) {\r\n        this.$view = options.$viewContainer;\r\n        this.$barContainer = options.$barContainer;\r\n        this.$bar = SliderBar.createBar();\r\n        this.isRendered = false;\r\n    }\r\n    SliderBar.prototype.update = function (opts) {\r\n        var currentOptions = this.$bar.data('options');\r\n        var options = opts.options, data = opts.data;\r\n        var defaultOptions = {\r\n            isHorizontal: true,\r\n            range: true,\r\n            dragInterval: false,\r\n        };\r\n        var newOptions = __assign(__assign(__assign({}, defaultOptions), currentOptions), options);\r\n        this.$bar.data('options', newOptions);\r\n        this.$bar.data('data', data);\r\n        if (!newOptions.isHorizontal && this.$bar.hasClass('slider__bar_horizontal')) {\r\n            this.$bar.removeClass('slider__bar_horizontal');\r\n        }\r\n        else if (newOptions.isHorizontal && !this.$bar.hasClass('slider__bar_horizontal')) {\r\n            this.$bar.addClass('slider__bar_horizontal');\r\n        }\r\n        if (newOptions.range) {\r\n            this.createRangeElement();\r\n        }\r\n        if (!newOptions.range && this.$range) {\r\n            this.destroyRangeElement();\r\n        }\r\n        if (!this.isRendered) {\r\n            this.$barContainer.append(this.$bar);\r\n            this.isRendered = true;\r\n            this.attachEventHandlers();\r\n        }\r\n    };\r\n    SliderBar.prototype.destroy = function () {\r\n        this.$bar.off('click');\r\n        this.$bar.remove();\r\n        this.isRendered = false;\r\n    };\r\n    SliderBar.prototype.attachEventHandlers = function () {\r\n        this.$bar.on('click', this.clickHandler.bind(this));\r\n    };\r\n    SliderBar.prototype.clickHandler = function (event) {\r\n        var $startEvent = $.Event('startChanging.myMVPSlider');\r\n        this.$view.trigger($startEvent);\r\n        var clickCoord;\r\n        var selectedVal;\r\n        var elem = event.currentTarget;\r\n        var elemMetrics = elem.getBoundingClientRect();\r\n        var options = $(elem).data('options');\r\n        if (options.isHorizontal) {\r\n            clickCoord = event.clientX - elemMetrics.x;\r\n            selectedVal = (clickCoord / elemMetrics.width) * 100;\r\n        }\r\n        else {\r\n            clickCoord = event.clientY - elemMetrics.y;\r\n            selectedVal = (clickCoord / elemMetrics.height) * 100;\r\n        }\r\n        var currentData = $(elem).data('data');\r\n        var isSecond = false;\r\n        if (Array.isArray(currentData)) {\r\n            var average = (currentData[1] + currentData[0]) / 2;\r\n            isSecond = selectedVal > average;\r\n        }\r\n        var eventData = [selectedVal, isSecond];\r\n        var $changeEvent = $.Event('changeValue.myMVPSlider');\r\n        this.$view.trigger($changeEvent, eventData);\r\n        var $finishEvent = $.Event('finish.myMVPSlider');\r\n        this.$view.trigger($finishEvent, eventData);\r\n    };\r\n    SliderBar.prototype.createRangeElement = function () {\r\n        var _a = this.$bar.data(), options = _a.options, data = _a.data;\r\n        if (!this.$range) {\r\n            this.$range = $('<div>', { class: 'slider__range' });\r\n            this.$range.data('have-handler', false);\r\n            this.$bar.append(this.$range);\r\n        }\r\n        if (options.isHorizontal) {\r\n            this.$range.css({ top: '', height: '' });\r\n            if (Array.isArray(data)) {\r\n                var value = data[0], secondValue = data[1];\r\n                this.$range.css({\r\n                    left: value + \"%\",\r\n                    width: secondValue - value + \"%\",\r\n                    'border-radius': '0.75rem',\r\n                });\r\n            }\r\n            else {\r\n                this.$range.css({\r\n                    left: 0,\r\n                    width: data + \"%\",\r\n                    'border-top-left-radius': '0.75rem',\r\n                    'border-bottom-left-radius': '0.75rem',\r\n                });\r\n            }\r\n        }\r\n        else if (Array.isArray(data)) {\r\n            var value = data[0], secondValue = data[1];\r\n            this.$range.css({\r\n                left: '',\r\n                width: '',\r\n                top: value + \"%\",\r\n                height: secondValue - value + \"%\",\r\n                'border-radius': '0.75rem',\r\n            });\r\n        }\r\n        else {\r\n            this.$range.css({\r\n                width: '',\r\n                top: '',\r\n                height: data + \"%\",\r\n                'border-top-left-radius': '0.75rem',\r\n                'border-top-right-radius': '0.75rem',\r\n            });\r\n        }\r\n        var haveHandler = this.$range.data('have-handler');\r\n        var isDragable = options.dragInterval && Array.isArray(data);\r\n        if (isDragable && !haveHandler) {\r\n            this.$range.css({ cursor: 'grab' });\r\n            this.$range.on('mousedown.bar', this.dragStartHandler.bind(this));\r\n            this.$range.data('have-handler', true);\r\n            this.$range[0].onclick = function (e) {\r\n                e.stopPropagation();\r\n            };\r\n            this.$range.on('dragstart.bar', false);\r\n        }\r\n        if (!isDragable && haveHandler) {\r\n            this.$range.css({ cursor: 'default' });\r\n            this.$range.off('mousedown.bar');\r\n            this.$range.data('have-handler', false);\r\n            this.$range[0].onclick = null;\r\n            this.$range.off('dragstart.bar');\r\n        }\r\n    };\r\n    SliderBar.prototype.dragStartHandler = function (event) {\r\n        var _this = this;\r\n        this.$range.css({ cursor: 'grabbing' });\r\n        var startCoord;\r\n        var viewMetrics = this.$view[0].getBoundingClientRect();\r\n        if (this.$bar.data('options').isHorizontal) {\r\n            startCoord = ((event.clientX - viewMetrics.x) / viewMetrics.width) * 100;\r\n        }\r\n        else {\r\n            startCoord = ((event.clientY - viewMetrics.y) / viewMetrics.height) * 100;\r\n        }\r\n        var $startEvent = $.Event('startChanging.myMVPSlider');\r\n        var isDragStarted = true;\r\n        this.$view.trigger($startEvent, [isDragStarted]);\r\n        var dragHandler = this.makeDragHandler(startCoord);\r\n        this.$view.on('mousemove.bar', dragHandler);\r\n        document.onmouseup = function () {\r\n            _this.$view.off('mousemove.bar', dragHandler);\r\n            _this.$range.css({ cursor: 'grab' });\r\n            var $dropEvent = $.Event('dropRange.myMVPSlider');\r\n            _this.$view.trigger($dropEvent);\r\n            document.onmouseup = null;\r\n        };\r\n    };\r\n    SliderBar.prototype.makeDragHandler = function (start) {\r\n        var _this = this;\r\n        var dragHandler = function (event) {\r\n            var newCoord;\r\n            var viewMetrics = _this.$view[0].getBoundingClientRect();\r\n            if (_this.$bar.data('options').isHorizontal) {\r\n                newCoord = ((event.clientX - viewMetrics.x) / viewMetrics.width) * 100;\r\n            }\r\n            else {\r\n                newCoord = ((event.clientY - viewMetrics.y) / viewMetrics.height) * 100;\r\n            }\r\n            var dragDistance = newCoord - start;\r\n            var $dragRangeEvent = $.Event('dragRange.myMVPSlider');\r\n            _this.$view.trigger($dragRangeEvent, [dragDistance]);\r\n        };\r\n        return dragHandler;\r\n    };\r\n    SliderBar.prototype.destroyRangeElement = function () {\r\n        this.$range.remove();\r\n        this.$range = null;\r\n    };\r\n    SliderBar.createBar = function () {\r\n        var $bar = $('<div>', {\r\n            class: 'js-slider__bar slider__bar',\r\n        });\r\n        return $bar;\r\n    };\r\n    return SliderBar;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderBar);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/bar/bar.ts?");

/***/ }),

/***/ "./src/model/model.ts":
/*!****************************!*\
  !*** ./src/model/model.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar SliderModel = /** @class */ (function () {\r\n    function SliderModel(options) {\r\n        if (SliderModel.validateInitOptions(options)) {\r\n            this.maxValue = options.maxValue;\r\n            this.minValue = options.minValue;\r\n            this.step = options.step;\r\n        }\r\n        else {\r\n            this.maxValue = 10;\r\n            this.minValue = 0;\r\n            this.step = 1;\r\n        }\r\n        this.observers = new Set();\r\n        this.value = options.value;\r\n        if (options.secondValue !== undefined) {\r\n            this.secondValue = options.secondValue;\r\n        }\r\n        this.lockedValues = new Set();\r\n        if (options.lockedValues !== undefined) {\r\n            this.lockState(options.lockedValues);\r\n        }\r\n        this.isReadyNotify = true;\r\n        this.isUpdated = true;\r\n    }\r\n    Object.defineProperty(SliderModel.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (newValue) {\r\n            if (this._ableToChange('value', newValue)) {\r\n                var oldValue = this._value;\r\n                if (this._value === undefined) {\r\n                    this._value = this._minValue;\r\n                }\r\n                var fixedValue = this._getMultipleStep(newValue);\r\n                if (this._secondValue !== undefined && fixedValue >= this._secondValue) {\r\n                    this._value = this._secondValue;\r\n                    this.isUpdated = false;\r\n                }\r\n                else if (oldValue !== fixedValue) {\r\n                    this._value = fixedValue;\r\n                    this.isUpdated = false;\r\n                }\r\n                if (oldValue !== this._value) {\r\n                    this.notify();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SliderModel.prototype, \"maxValue\", {\r\n        get: function () {\r\n            return this._maxValue;\r\n        },\r\n        set: function (newValue) {\r\n            if (this._ableToChange('maxValue', newValue)) {\r\n                this._maxValue = newValue;\r\n                this.isUpdated = false;\r\n                if (this._value !== undefined) {\r\n                    this.value = this._value;\r\n                }\r\n                if (this._secondValue !== undefined) {\r\n                    this.secondValue = this._secondValue;\r\n                }\r\n                if (!this.isUpdated) {\r\n                    this.notify();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SliderModel.prototype, \"minValue\", {\r\n        get: function () {\r\n            return this._minValue;\r\n        },\r\n        set: function (newValue) {\r\n            if (this._ableToChange('minValue', newValue)) {\r\n                this._minValue = newValue;\r\n                this.isUpdated = false;\r\n                if (this._secondValue !== undefined) {\r\n                    this.secondValue = this._secondValue;\r\n                }\r\n                if (this._value !== undefined) {\r\n                    this.value = this._value;\r\n                }\r\n                if (!this.isUpdated) {\r\n                    this.notify();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SliderModel.prototype, \"step\", {\r\n        get: function () {\r\n            return this._step;\r\n        },\r\n        set: function (newValue) {\r\n            if (this._ableToChange('step', newValue)) {\r\n                this._step = +newValue.toFixed(17);\r\n                this.isUpdated = false;\r\n                if (this._value !== undefined) {\r\n                    this.value = this._value;\r\n                }\r\n                if (this._secondValue !== undefined) {\r\n                    this.secondValue = this._secondValue;\r\n                }\r\n                if (!this.isUpdated) {\r\n                    this.notify();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SliderModel.prototype, \"secondValue\", {\r\n        get: function () {\r\n            return this._secondValue;\r\n        },\r\n        set: function (newValue) {\r\n            if (this._ableToChange('secondValue', newValue)) {\r\n                var _a = this, _value = _a._value, oldValue = _a._secondValue;\r\n                if (newValue !== undefined) {\r\n                    var fixedValue = this._getMultipleStep(newValue);\r\n                    if (fixedValue <= _value) {\r\n                        this._secondValue = _value;\r\n                        this.isUpdated = oldValue === _value;\r\n                    }\r\n                    else if (oldValue !== fixedValue) {\r\n                        this._secondValue = fixedValue;\r\n                        this.isUpdated = false;\r\n                    }\r\n                }\r\n                else {\r\n                    this._secondValue = undefined;\r\n                    this.isUpdated = oldValue === undefined;\r\n                }\r\n                if (oldValue !== this._secondValue) {\r\n                    this.notify();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SliderModel.prototype.addObserver = function (observer) {\r\n        this.observers.add(observer);\r\n    };\r\n    SliderModel.prototype.removeObserver = function (observer) {\r\n        this.observers.delete(observer);\r\n    };\r\n    SliderModel.prototype.getState = function () {\r\n        var state = {\r\n            maxValue: this._maxValue,\r\n            minValue: this._minValue,\r\n            value: this._value,\r\n            step: this._step,\r\n            lockedValues: Array.from(this.lockedValues),\r\n        };\r\n        if (this._secondValue !== undefined) {\r\n            state.secondValue = this._secondValue;\r\n        }\r\n        return state;\r\n    };\r\n    SliderModel.prototype.updateState = function (state) {\r\n        var _a = this.getState(), oldMax = _a.maxValue, oldMin = _a.minValue;\r\n        this.isReadyNotify = false;\r\n        if (Object.prototype.hasOwnProperty.call(state, 'unlockValues')) {\r\n            this.unlockState(state.unlockValues);\r\n        }\r\n        var newState = this.createNewState(state);\r\n        if (newState.maxValue > newState.minValue) {\r\n            this._maxValue = newState.maxValue;\r\n            this._minValue = newState.minValue;\r\n        }\r\n        this.step = newState.step;\r\n        this.value = newState.value;\r\n        if (Object.prototype.hasOwnProperty.call(state, 'secondValue') || this.secondValue !== undefined) {\r\n            this.secondValue = newState.secondValue;\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(newState, 'lockedValues')) {\r\n            this.lockState(newState.lockedValues);\r\n        }\r\n        this.isReadyNotify = true;\r\n        if (oldMax !== this.maxValue || oldMin !== this.minValue) {\r\n            this.isUpdated = false;\r\n        }\r\n        if (!this.isUpdated)\r\n            this.notify();\r\n    };\r\n    SliderModel.prototype.lockState = function (props) {\r\n        var _this = this;\r\n        if (Array.isArray(props)) {\r\n            props.forEach(function (valueName) {\r\n                switch (valueName) {\r\n                    case 'minValue':\r\n                        _this.lockedValues.add('minValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'maxValue':\r\n                        _this.lockedValues.add('maxValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'step':\r\n                        _this.lockedValues.add('step');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'value':\r\n                        _this.lockedValues.add('value');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'secondValue':\r\n                        _this.lockedValues.add('secondValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        else if (props === 'all') {\r\n            this.lockedValues.add('maxValue');\r\n            this.lockedValues.add('minValue');\r\n            this.lockedValues.add('step');\r\n            this.lockedValues.add('value');\r\n            this.lockedValues.add('secondValue');\r\n            this.isUpdated = false;\r\n        }\r\n        if (!this.isUpdated)\r\n            this.notify();\r\n    };\r\n    SliderModel.prototype.unlockState = function (props) {\r\n        var _this = this;\r\n        if (Array.isArray(props)) {\r\n            props.forEach(function (valueName) {\r\n                switch (valueName) {\r\n                    case 'minValue':\r\n                        _this.lockedValues.delete('minValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'maxValue':\r\n                        _this.lockedValues.delete('maxValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'step':\r\n                        _this.lockedValues.delete('step');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'value':\r\n                        _this.lockedValues.delete('value');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    case 'secondValue':\r\n                        _this.lockedValues.delete('secondValue');\r\n                        _this.isUpdated = false;\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        else if (props === 'all') {\r\n            this.lockedValues.clear();\r\n            this.isUpdated = false;\r\n        }\r\n        if (!this.isUpdated)\r\n            this.notify();\r\n    };\r\n    SliderModel.prototype.notify = function () {\r\n        if (this._checkObservers() && this.isReadyNotify) {\r\n            this.observers.forEach(function (observer) {\r\n                observer.update();\r\n            });\r\n            this.isUpdated = true;\r\n        }\r\n    };\r\n    SliderModel.prototype._checkObservers = function () {\r\n        return (this.observers !== undefined && this.observers.size !== 0);\r\n    };\r\n    SliderModel.prototype._getMultipleStep = function (value) {\r\n        var _a = this, step = _a._step, max = _a._maxValue, min = _a._minValue;\r\n        var result;\r\n        var tempResult;\r\n        switch (true) {\r\n            case (value >= max):\r\n                result = max;\r\n                break;\r\n            case (value <= min):\r\n                result = min;\r\n                break;\r\n            case ((((value - min) % step) / step > 0.5)):\r\n                tempResult = (value - ((value - min) % step) + step);\r\n                if (tempResult > max) {\r\n                    result = max;\r\n                }\r\n                else {\r\n                    result = tempResult;\r\n                }\r\n                break;\r\n            default:\r\n                tempResult = (value - ((value - min) % step));\r\n                if ((tempResult + step) >= max && ((max + tempResult) / 2) < value) {\r\n                    result = max;\r\n                }\r\n                else {\r\n                    result = (value - ((value - min) % step));\r\n                }\r\n                break;\r\n        }\r\n        return SliderModel.fixVal(result, step);\r\n    };\r\n    SliderModel.prototype._isLocked = function (value) {\r\n        return (this.lockedValues !== undefined && this.lockedValues.has(value));\r\n    };\r\n    SliderModel.prototype._ableToChange = function (value, newValue) {\r\n        var isValid = SliderModel._validate(newValue);\r\n        var isLocked = this._isLocked(value);\r\n        var isEqual;\r\n        var isUndefined;\r\n        var isGreaterThenMin;\r\n        var isLessThenMax;\r\n        switch (value) {\r\n            case 'value':\r\n                return (isValid && !isLocked);\r\n            case 'secondValue':\r\n                return (newValue === undefined) || (isValid && !isLocked);\r\n            case 'maxValue':\r\n                isEqual = (newValue === this._maxValue);\r\n                isUndefined = (this._maxValue === undefined);\r\n                isGreaterThenMin = (this._minValue === undefined || newValue > this._minValue);\r\n                return isUndefined || (isValid && !isLocked && !isEqual && isGreaterThenMin);\r\n            case 'minValue':\r\n                isEqual = (newValue === this._minValue);\r\n                isUndefined = (this._minValue === undefined);\r\n                isLessThenMax = (this._maxValue === undefined || newValue < this._maxValue);\r\n                return isUndefined || (isValid && !isLocked && !isEqual && isLessThenMax);\r\n            case 'step':\r\n                isEqual = (newValue === this._step);\r\n                isUndefined = (this._step === undefined);\r\n                return isUndefined || (isValid && !isLocked && !isEqual && (newValue > 0));\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n    SliderModel.prototype.createNewState = function (state) {\r\n        var _a = this.getState(), oldMax = _a.maxValue, oldMin = _a.minValue, oldStep = _a.step, oldVal = _a.value, oldSecondVal = _a.secondValue;\r\n        var newState = $.extend(this.getState(), state);\r\n        if (Object.prototype.hasOwnProperty.call(state, 'secondValue')) {\r\n            newState.secondValue = state.secondValue;\r\n        }\r\n        newState.maxValue = this._isLocked('maxValue') ? oldMax : newState.maxValue;\r\n        newState.minValue = this._isLocked('minValue') ? oldMin : newState.minValue;\r\n        newState.step = this._isLocked('step') ? oldStep : newState.step;\r\n        newState.value = this._isLocked('value') ? oldVal : newState.value;\r\n        newState.secondValue = this._isLocked('secondValue') ? oldSecondVal : newState.secondValue;\r\n        return newState;\r\n    };\r\n    SliderModel._validate = function (value) {\r\n        return !(value === null || Number.isNaN(value) || !Number.isFinite(value));\r\n    };\r\n    SliderModel.validateInitOptions = function (options) {\r\n        var hasMaxVal = Object.prototype.hasOwnProperty.call(options, 'maxValue');\r\n        var hasMinVal = Object.prototype.hasOwnProperty.call(options, 'minValue');\r\n        var hasStep = Object.prototype.hasOwnProperty.call(options, 'step');\r\n        var isMaxGreaterMin = options.maxValue > options.minValue;\r\n        var isStepPositive = options.step > 0;\r\n        return hasMaxVal && hasMinVal && hasStep && isMaxGreaterMin && isStepPositive;\r\n    };\r\n    SliderModel.fixVal = function (value, baseVal) {\r\n        if (!(baseVal % 1)) {\r\n            return +value.toFixed(0);\r\n        }\r\n        if (baseVal.toString().includes('e')) {\r\n            var base_1 = +(\"\" + baseVal).split('e-')[1];\r\n            var fixedVal_1 = +value.toFixed(base_1);\r\n            return fixedVal_1;\r\n        }\r\n        var base = (\"\" + baseVal).split('.')[1].length;\r\n        var fixedVal = +value.toFixed(base);\r\n        return fixedVal;\r\n    };\r\n    return SliderModel;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderModel);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/model/model.ts?");

/***/ }),

/***/ "./src/plugin/plugin.ts":
/*!******************************!*\
  !*** ./src/plugin/plugin.ts ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app/app */ \"./src/app/app.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-param-reassign */\r\n\r\n(function ($) {\r\n    $.fn.myMVPSlider = function (options) {\r\n        var defaultSettings = {\r\n            maxValue: 100,\r\n            minValue: 0,\r\n            step: 1,\r\n            value: 0,\r\n            secondValue: undefined,\r\n            // view\r\n            isHorizontal: true,\r\n            range: true,\r\n            dragInterval: false,\r\n            runner: true,\r\n            bar: true,\r\n            scale: true,\r\n            numOfScaleVal: 3,\r\n            displayScaleValue: true,\r\n            displayValue: true,\r\n            displayMin: true,\r\n            displayMax: true,\r\n            prefix: '',\r\n            postfix: '',\r\n            // presenter\r\n            dataValues: [],\r\n            // callbacks\r\n            onStart: function () { },\r\n            onChange: function () { },\r\n            onFinish: function () { },\r\n            onUpdate: function () { },\r\n        };\r\n        var validOptions;\r\n        if (options === 'destroy') {\r\n            this.each(function destroy() {\r\n                var slider = $(this).data('myMVPSlider');\r\n                if (slider) {\r\n                    slider.destroy();\r\n                    $(this).data({\r\n                        myMVPSlider: undefined,\r\n                        'init-options': undefined,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (options) {\r\n                var optionsEntries = Object.entries(options);\r\n                var opts = optionsEntries.map(function (entry) {\r\n                    var key = entry[0];\r\n                    switch (key) {\r\n                        case 'maxValue':\r\n                        case 'minValue':\r\n                        case 'step':\r\n                        case 'value':\r\n                        case 'secondValue':\r\n                            if (entry[1] === null || Number.isNaN(entry[1])) {\r\n                                break;\r\n                            }\r\n                            return entry;\r\n                        case 'isHorizontal':\r\n                        case 'range':\r\n                        case 'dragInterval':\r\n                        case 'runner':\r\n                        case 'bar':\r\n                        case 'scale':\r\n                        case 'displayScaleValue':\r\n                        case 'displayValue':\r\n                        case 'displayMin':\r\n                        case 'displayMax':\r\n                            if (typeof entry[1] === 'boolean') {\r\n                                return entry;\r\n                            }\r\n                            break;\r\n                        case 'numOfScaleVal':\r\n                            if (typeof entry[1] === 'number' && (entry[1] >= 0)) {\r\n                                return entry;\r\n                            }\r\n                            break;\r\n                        case 'prefix':\r\n                        case 'postfix':\r\n                            if (typeof entry[1] === 'string') {\r\n                                return entry;\r\n                            }\r\n                            break;\r\n                        case 'dataValues':\r\n                            if (Array.isArray(entry[1])) {\r\n                                return entry;\r\n                            }\r\n                            break;\r\n                        case 'onStart':\r\n                        case 'onChange':\r\n                        case 'onFinish':\r\n                        case 'onUpdate':\r\n                            if (typeof entry[1] === 'function') {\r\n                                return entry;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            return entry;\r\n                    }\r\n                    return [key, defaultSettings[key]];\r\n                });\r\n                validOptions = opts.reduce(function (acc, _a) {\r\n                    var _b;\r\n                    var k = _a[0], v = _a[1];\r\n                    return (__assign(__assign({}, acc), (_b = {}, _b[k] = v, _b)));\r\n                }, {});\r\n            }\r\n            this.each(function addPlugin() {\r\n                var $this = $(this);\r\n                var dataOptions = $this.data();\r\n                var sliderSettings = $.extend({}, defaultSettings, validOptions, dataOptions);\r\n                var app = new _app_app__WEBPACK_IMPORTED_MODULE_0__[\"default\"](sliderSettings, this);\r\n                $this.data('myMVPSlider', app);\r\n                $this.data('init-options', sliderSettings);\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n}(jQuery));\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/plugin/plugin.ts?");

/***/ }),

/***/ "./src/presenter/presenter.ts":
/*!************************************!*\
  !*** ./src/presenter/presenter.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _model_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/model */ \"./src/model/model.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nvar SliderPresenter = /** @class */ (function () {\r\n    function SliderPresenter(options) {\r\n        this.model = options.model;\r\n        this.view = options.view;\r\n        this.callbacks = {\r\n            onStart: options.onStart,\r\n            onChange: options.onChange,\r\n            onFinish: options.onFinish,\r\n            onUpdate: options.onUpdate,\r\n        };\r\n        this.subscribeToModel();\r\n        this.subscribeToView();\r\n        this.dataValues = options.dataValues || [];\r\n        this.isChanging = false;\r\n        this.isReadyRender = true;\r\n        this.renderView();\r\n    }\r\n    SliderPresenter.prototype.update = function (options) {\r\n        this.isReadyRender = false;\r\n        var dataValues = options.dataValues;\r\n        var modelOptions = {\r\n            maxValue: options.maxValue,\r\n            minValue: options.minValue,\r\n            step: options.step,\r\n            value: options.value,\r\n            lockedValues: options.lockedValues,\r\n            unlockValues: options.unlockValues,\r\n        };\r\n        if (Object.prototype.hasOwnProperty.call(options, 'secondValue')) {\r\n            modelOptions.secondValue = options.secondValue;\r\n        }\r\n        var viewOptions = {\r\n            isHorizontal: options.isHorizontal,\r\n            range: options.range,\r\n            dragInterval: options.dragInterval,\r\n            runner: options.runner,\r\n            bar: options.bar,\r\n            scale: options.scale,\r\n            numOfScaleVal: options.numOfScaleVal,\r\n            displayScaleValue: options.displayScaleValue,\r\n            displayValue: options.displayValue,\r\n            displayMin: options.displayMin,\r\n            displayMax: options.displayMax,\r\n            prefix: options.prefix,\r\n            postfix: options.postfix,\r\n        };\r\n        if (dataValues) {\r\n            if (dataValues.length > 1) {\r\n                this.dataValues = dataValues;\r\n                modelOptions = __assign(__assign({}, modelOptions), { unlockValues: 'all', maxValue: dataValues.length - 1, minValue: 0, step: 1, lockedValues: ['maxValue', 'minValue', 'step'] });\r\n                viewOptions = __assign(__assign({}, viewOptions), { numOfScaleVal: dataValues.length - 2 });\r\n            }\r\n            else {\r\n                this.dataValues = [];\r\n                this.model.unlockState(['maxValue', 'minValue', 'step']);\r\n            }\r\n        }\r\n        if (!SliderPresenter.isEmpty(modelOptions) || Object.prototype.hasOwnProperty.call(options, 'secondValue')) {\r\n            this.model.updateState(modelOptions);\r\n        }\r\n        if (!SliderPresenter.isEmpty(viewOptions)) {\r\n            this.view.update(viewOptions);\r\n        }\r\n        if (options.onStart && typeof options.onStart === 'function') {\r\n            this.callbacks.onStart = options.onStart;\r\n        }\r\n        if (options.onChange && typeof options.onChange === 'function') {\r\n            this.callbacks.onChange = options.onChange;\r\n        }\r\n        if (options.onFinish && typeof options.onFinish === 'function') {\r\n            this.callbacks.onFinish = options.onFinish;\r\n        }\r\n        if (options.onUpdate && typeof options.onUpdate === 'function') {\r\n            this.callbacks.onUpdate = options.onUpdate;\r\n        }\r\n        this.callbacks.onUpdate();\r\n        this.isReadyRender = true;\r\n        this.renderView();\r\n    };\r\n    SliderPresenter.prototype.getPresenterData = function () {\r\n        return { dataValues: this.dataValues };\r\n    };\r\n    SliderPresenter.prototype.setUserData = function (data) {\r\n        if (Array.isArray(data) && data.length > 1) {\r\n            this.dataValues = data;\r\n            this.update({\r\n                unlockValues: 'all',\r\n                maxValue: data.length - 1,\r\n                minValue: 0,\r\n                step: 1,\r\n                lockedValues: ['maxValue', 'minValue', 'step'],\r\n                numOfScaleVal: data.length - 2,\r\n            });\r\n        }\r\n    };\r\n    SliderPresenter.prototype.createDataValues = function (data, options) {\r\n        var _a = data || this.model.getState(), min = _a.minValue, max = _a.maxValue, step = _a.step;\r\n        var _b = options || this.view.getData(), _c = _b.displayMax, displayMax = _c === void 0 ? true : _c, _d = _b.displayMin, displayMin = _d === void 0 ? true : _d, _e = _b.numOfScaleVal, numOfScaleVal = _e === void 0 ? 10 : _e;\r\n        var values = [];\r\n        if (displayMin) {\r\n            values.push(min);\r\n        }\r\n        var total;\r\n        var num = (max - min) / step;\r\n        if (num % 1 === 0) {\r\n            total = num - 1;\r\n        }\r\n        else {\r\n            total = Math.floor(num);\r\n        }\r\n        var resultNum = numOfScaleVal < total ? numOfScaleVal : total;\r\n        if (resultNum <= 0) {\r\n            resultNum = 0;\r\n        }\r\n        if (resultNum >= 10) {\r\n            resultNum = 10;\r\n        }\r\n        if (resultNum === total) {\r\n            for (var i = 1; i <= total; i += 1) {\r\n                var elem = min + step * i;\r\n                values.push(elem);\r\n            }\r\n        }\r\n        else {\r\n            var s = (max - min) / (resultNum + 1);\r\n            for (var i = 1; i <= resultNum; i += 1) {\r\n                var elem = min + s * i;\r\n                var multipleElem = void 0;\r\n                if ((elem - min) % step > step / 2) {\r\n                    multipleElem = elem - ((elem - min) % step) + step;\r\n                }\r\n                else {\r\n                    multipleElem = elem - ((elem - min) % step);\r\n                }\r\n                values.push(_model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(multipleElem, step));\r\n            }\r\n        }\r\n        if (displayMax) {\r\n            values.push(max);\r\n        }\r\n        return values;\r\n    };\r\n    SliderPresenter.prototype.createPercentageData = function (data) {\r\n        var _a = this.model.getState(), min = _a.minValue, max = _a.maxValue, step = _a.step;\r\n        var baseValue = step / (max - min);\r\n        var percentageData = data.map(function (val) {\r\n            var percentage = ((val - min) / (max - min)) * 100;\r\n            return _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(percentage, baseValue);\r\n        });\r\n        return percentageData;\r\n    };\r\n    SliderPresenter.prototype.createRenderData = function () {\r\n        var _this = this;\r\n        var value;\r\n        var percentage;\r\n        var _a = this.model.getState(), from = _a.value, to = _a.secondValue;\r\n        if (to !== undefined) {\r\n            if (this.dataValues.length > 0) {\r\n                value = [this.dataValues[from], this.dataValues[to]];\r\n            }\r\n            else {\r\n                value = [from, to];\r\n            }\r\n            percentage = [this.convertValueToPercent(from), this.convertValueToPercent(to)];\r\n        }\r\n        else {\r\n            if (this.dataValues.length > 0) {\r\n                value = this.dataValues[from];\r\n            }\r\n            else {\r\n                value = from;\r\n            }\r\n            percentage = this.convertValueToPercent(from);\r\n        }\r\n        var dataValues = this.createDataValues();\r\n        var percentageData = this.createPercentageData(dataValues);\r\n        var data;\r\n        if (this.dataValues.length) {\r\n            data = dataValues.map(function (val) { return _this.dataValues[val]; });\r\n        }\r\n        else {\r\n            data = dataValues;\r\n        }\r\n        var viewRenderData = {\r\n            data: data,\r\n            percentageData: percentageData,\r\n            value: value,\r\n            percentage: percentage,\r\n        };\r\n        return viewRenderData;\r\n    };\r\n    SliderPresenter.prototype.subscribeToModel = function () {\r\n        var _this = this;\r\n        this.modelObserver = {\r\n            update: function () {\r\n                var updatedModelState = _this.model.getState();\r\n                if (_this.isChanging) {\r\n                    _this.callbacks.onChange(updatedModelState);\r\n                }\r\n                _this.renderView();\r\n            },\r\n        };\r\n        this.model.addObserver(this.modelObserver);\r\n    };\r\n    SliderPresenter.prototype.subscribeToView = function () {\r\n        var _this = this;\r\n        this.viewObserver = {\r\n            start: function () {\r\n                _this.callbacks.onStart(_this.model.getState());\r\n            },\r\n            change: function (values) {\r\n                _this.isChanging = true;\r\n                var convertedValues = _this.convertPercentToValue(values);\r\n                if (Array.isArray(convertedValues)) {\r\n                    var newValue = convertedValues[0], newSecondValue = convertedValues[1];\r\n                    _this.model.updateState({ value: newValue, secondValue: newSecondValue });\r\n                }\r\n                else {\r\n                    _this.model.updateState({ value: convertedValues });\r\n                }\r\n            },\r\n            finish: function () {\r\n                _this.callbacks.onFinish(_this.model.getState());\r\n            },\r\n            update: function () {\r\n                _this.renderView();\r\n            },\r\n        };\r\n        this.view.addObserver(this.viewObserver);\r\n    };\r\n    SliderPresenter.prototype.renderView = function () {\r\n        if (this.isReadyRender) {\r\n            var viewRenderData = this.createRenderData();\r\n            this.view.render(viewRenderData);\r\n        }\r\n    };\r\n    SliderPresenter.prototype.convertPercentToValue = function (percentage) {\r\n        var _a = this.model.getState(), minValue = _a.minValue, maxValue = _a.maxValue;\r\n        var value;\r\n        var secondValue;\r\n        var values;\r\n        if (Array.isArray(percentage)) {\r\n            var firstPercent = percentage[0], secondPercent = percentage[1];\r\n            value = ((maxValue - minValue) / 100) * firstPercent + minValue;\r\n            secondValue = ((maxValue - minValue) / 100) * secondPercent + minValue;\r\n            values = [value, secondValue];\r\n        }\r\n        else {\r\n            values = ((maxValue - minValue) / 100) * percentage + minValue;\r\n        }\r\n        return values;\r\n    };\r\n    SliderPresenter.prototype.convertValueToPercent = function (values) {\r\n        var _a = this.model.getState(), minValue = _a.minValue, maxValue = _a.maxValue, step = _a.step;\r\n        var baseValue = step / (maxValue - minValue);\r\n        var percentage = ((values - minValue) / (maxValue - minValue)) * 100;\r\n        return _model_model__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fixVal(percentage, baseValue);\r\n    };\r\n    SliderPresenter.isEmpty = function (object) {\r\n        var entries = Object.entries(object);\r\n        var isEmpty = true;\r\n        entries.forEach(function (entry) {\r\n            if (entry[1] !== undefined) {\r\n                isEmpty = false;\r\n            }\r\n        });\r\n        return isEmpty;\r\n    };\r\n    return SliderPresenter;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderPresenter);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/presenter/presenter.ts?");

/***/ }),

/***/ "./src/runner/runner.css":
/*!*******************************!*\
  !*** ./src/runner/runner.css ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./runner.css */ \"./node_modules/css-loader/dist/cjs.js!./src/runner/runner.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.css?");

/***/ }),

/***/ "./src/runner/runner.ts":
/*!******************************!*\
  !*** ./src/runner/runner.ts ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _runner_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runner.css */ \"./src/runner/runner.css\");\n/* harmony import */ var _runner_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_runner_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nvar SliderRunner = /** @class */ (function () {\r\n    function SliderRunner(options) {\r\n        this.$barContainer = options.$barContainer;\r\n        this.$view = options.$viewContainer;\r\n        this.$runner = SliderRunner.createRunner();\r\n        this.isRendered = false;\r\n        this.isSecond = (options.isSecond === true);\r\n    }\r\n    SliderRunner.prototype.update = function (opts) {\r\n        var data = opts.data, options = opts.options;\r\n        var currentData = this.$runner.data('options');\r\n        var defaultOptions = { isHorizontal: true };\r\n        var runnerOptions = __assign(__assign(__assign({}, defaultOptions), currentData), options);\r\n        if (runnerOptions.isHorizontal && !this.$runner.hasClass('slider__runner_horizontal')) {\r\n            this.$runner.addClass('slider__runner_horizontal');\r\n        }\r\n        if (!runnerOptions.isHorizontal && this.$runner.hasClass('slider__runner_horizontal')) {\r\n            this.$runner.removeClass('slider__runner_horizontal');\r\n        }\r\n        if (this.isSecond) {\r\n            this.$runner.addClass('runner_second');\r\n        }\r\n        else {\r\n            this.$runner.addClass('runner_first');\r\n        }\r\n        if (!this.isRendered) {\r\n            this.$barContainer.append(this.$runner);\r\n            this.attacheEventHandlers();\r\n            this.isRendered = true;\r\n        }\r\n        var runnerMetrics = this.$runner[0].getBoundingClientRect();\r\n        var runnerWidth = runnerMetrics.width;\r\n        var value;\r\n        var percentage;\r\n        if (Array.isArray(data.percentage) && Array.isArray(data.value)) {\r\n            var _a = data.value, from = _a[0], to = _a[1];\r\n            var _b = data.percentage, fromPercentage = _b[0], toPercentage = _b[1];\r\n            var fromPosition = \"calc(\" + fromPercentage + \"% - \" + runnerWidth / 2 + \"px)\";\r\n            var toPosition = \"calc(\" + toPercentage + \"% - \" + runnerWidth / 2 + \"px)\";\r\n            value = this.isSecond ? to : from;\r\n            percentage = this.isSecond ? toPosition : fromPosition;\r\n        }\r\n        if (!Array.isArray(data.percentage) && !Array.isArray(data.value)) {\r\n            value = data.value;\r\n            percentage = \"calc(\" + data.percentage + \"% - \" + runnerWidth / 2 + \"px)\";\r\n        }\r\n        this.$runner.data('options', runnerOptions);\r\n        this.$runner.data('value', value);\r\n        if (options.isHorizontal) {\r\n            this.$runner.css('top', '');\r\n            this.$runner.css({ left: percentage });\r\n        }\r\n        else {\r\n            this.$runner.css('left', '');\r\n            this.$runner.css({ top: percentage });\r\n        }\r\n    };\r\n    SliderRunner.prototype.destroy = function () {\r\n        this.$runner.off('mousedown.runner');\r\n        this.$view.off('mousemove.runner');\r\n        this.$runner.remove();\r\n        this.isRendered = false;\r\n    };\r\n    SliderRunner.prototype.attacheEventHandlers = function () {\r\n        this.$runner.on('mousedown.runner', this.dragStartHandler.bind(this));\r\n        this.$runner.on('dragstart', false);\r\n    };\r\n    SliderRunner.prototype.dragStartHandler = function (event) {\r\n        var _this = this;\r\n        var $startEvent = $.Event('startChanging.myMVPSlider');\r\n        this.$view.trigger($startEvent);\r\n        var runner = event.currentTarget;\r\n        var renderOptions = $(runner).data('options');\r\n        this.$runner.css('cursor', 'grabbing');\r\n        var mouseMoveHandler = this.makeHandler(renderOptions);\r\n        this.$view.on('mousemove.runner', mouseMoveHandler);\r\n        document.onmouseup = function () {\r\n            _this.$view.off('.runner');\r\n            _this.$runner.css('cursor', 'grab');\r\n            var $finishEvent = $.Event('finish.myMVPSlider');\r\n            _this.$view.trigger($finishEvent);\r\n            document.onmouseup = null;\r\n        };\r\n    };\r\n    SliderRunner.prototype.makeHandler = function (opts) {\r\n        var _this = this;\r\n        var moveCoord;\r\n        var selectedVal;\r\n        var bar = this.$barContainer[0];\r\n        var elemMetrics = bar.getBoundingClientRect();\r\n        var mouseMoveHandler = function (e) {\r\n            if (opts.isHorizontal) {\r\n                moveCoord = e.clientX - elemMetrics.x;\r\n                selectedVal = (moveCoord / elemMetrics.width) * 100;\r\n            }\r\n            else {\r\n                moveCoord = e.clientY - elemMetrics.y;\r\n                selectedVal = (moveCoord / elemMetrics.height) * 100;\r\n            }\r\n            var $changeEvent = $.Event('changeValue.myMVPSlider');\r\n            _this.$view.trigger($changeEvent, [selectedVal, _this.isSecond]);\r\n        };\r\n        return mouseMoveHandler;\r\n    };\r\n    SliderRunner.createRunner = function () {\r\n        var $runner = $('<div>', {\r\n            class: 'js-slider__runner slider__runner',\r\n        });\r\n        return $runner;\r\n    };\r\n    return SliderRunner;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderRunner);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/runner/runner.ts?");

/***/ }),

/***/ "./src/scale/scale.css":
/*!*****************************!*\
  !*** ./src/scale/scale.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./scale.css */ \"./node_modules/css-loader/dist/cjs.js!./src/scale/scale.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.css?");

/***/ }),

/***/ "./src/scale/scale.ts":
/*!****************************!*\
  !*** ./src/scale/scale.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scale_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scale.css */ \"./src/scale/scale.css\");\n/* harmony import */ var _scale_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scale_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nvar SliderScale = /** @class */ (function () {\r\n    function SliderScale(options) {\r\n        this.$view = options.$viewContainer;\r\n        this.$scale = SliderScale.createScale();\r\n        this.isRendered = false;\r\n    }\r\n    SliderScale.prototype.update = function (opts) {\r\n        var currentData = this.$scale.data('options');\r\n        var newData = opts.data, options = opts.options;\r\n        var defaultOptions = {\r\n            isHorizontal: true,\r\n            displayScaleValue: true,\r\n            displayMin: true,\r\n            displayMax: true,\r\n            numOfScaleVal: 3,\r\n        };\r\n        var scaleOptions = __assign(__assign(__assign({}, defaultOptions), currentData), options);\r\n        this.$scale.data('data', newData);\r\n        this.$scale.data('options', scaleOptions);\r\n        var isHorizontal = scaleOptions.isHorizontal, displayScaleValue = scaleOptions.displayScaleValue;\r\n        if (isHorizontal && !this.$scale.hasClass('slider__scale_horizontal')) {\r\n            this.$scale.addClass('slider__scale_horizontal');\r\n        }\r\n        if (!isHorizontal && this.$scale.hasClass('slider__scale_horizontal')) {\r\n            this.$scale.removeClass('slider__scale_horizontal');\r\n        }\r\n        if (!this.isRendered) {\r\n            this.$view.append(this.$scale);\r\n            this.attachEventHandlers();\r\n            this.isRendered = true;\r\n        }\r\n        var data = newData.data, percentageData = newData.percentageData;\r\n        this.$scale.empty();\r\n        // append values\r\n        if (displayScaleValue) {\r\n            var total = data.length;\r\n            for (var i = 0; i <= total - 1; i += 1) {\r\n                var content = data[i].toString();\r\n                var percentage = percentageData[i];\r\n                var $elem = SliderScale.createElement(content, percentage, scaleOptions);\r\n                this.$scale.append($elem);\r\n                SliderScale.positionElem($elem, scaleOptions);\r\n            }\r\n        }\r\n        var maxVal = 0;\r\n        this.$scale.find('.scale__element').each(function compareWithMaxVal() {\r\n            if (isHorizontal) {\r\n                var h = this.getBoundingClientRect().height;\r\n                maxVal = (maxVal > h) ? maxVal : h;\r\n            }\r\n            else {\r\n                var w = this.getBoundingClientRect().width;\r\n                maxVal = (maxVal > w) ? maxVal : w;\r\n            }\r\n        });\r\n        if (isHorizontal) {\r\n            this.$scale.css({\r\n                height: maxVal + \"px\",\r\n                width: '100%',\r\n            });\r\n        }\r\n        else {\r\n            this.$scale.css({\r\n                width: maxVal + \"px\",\r\n                height: '100%',\r\n            });\r\n        }\r\n    };\r\n    SliderScale.prototype.destroy = function () {\r\n        this.$scale.off('click');\r\n        this.$scale.remove();\r\n        this.isRendered = false;\r\n    };\r\n    SliderScale.prototype.attachEventHandlers = function () {\r\n        this.$scale.on('click', this.clickEventListener.bind(this));\r\n    };\r\n    SliderScale.prototype.clickEventListener = function (event) {\r\n        var elem = event.target;\r\n        var selectedVal;\r\n        if (elem.classList.contains('scale__element')) {\r\n            selectedVal = $(elem).data('percentage');\r\n            var $startEvent = $.Event('startChanging.myMVPSlider');\r\n            this.$view.trigger($startEvent);\r\n            var currentData = this.$scale.data('data').percentage;\r\n            var isSecond = false;\r\n            if (Array.isArray(currentData)) {\r\n                var average = (currentData[1] + currentData[0]) / 2;\r\n                isSecond = selectedVal > average;\r\n            }\r\n            var eventData = [selectedVal, isSecond];\r\n            var $changeEvent = $.Event('changeValue.myMVPSlider');\r\n            this.$view.trigger($changeEvent, eventData);\r\n            var $finishEvent = $.Event('finish.myMVPSlider');\r\n            this.$view.trigger($finishEvent, eventData);\r\n        }\r\n    };\r\n    SliderScale.createScale = function () {\r\n        var $scaleContainer = $('<div>', {\r\n            class: 'js-slider__scale slider__scale',\r\n        });\r\n        return $scaleContainer;\r\n    };\r\n    SliderScale.createElement = function (content, percentage, options) {\r\n        var $elem = $('<span>', { class: 'scale__element' });\r\n        $elem.html(content);\r\n        $elem.data('percentage', percentage);\r\n        if (options.isHorizontal) {\r\n            $elem.addClass('scale__element_horizontal');\r\n        }\r\n        return $elem;\r\n    };\r\n    SliderScale.positionElem = function ($elem, options) {\r\n        var percentage = $elem.data('percentage');\r\n        var elemMetrics = $elem[0].getBoundingClientRect();\r\n        if (options.isHorizontal) {\r\n            switch (percentage) {\r\n                case 0:\r\n                    $elem.css({\r\n                        left: 'calc(0% - 0.75rem)',\r\n                    });\r\n                    break;\r\n                case 100:\r\n                    $elem.css({\r\n                        right: 'calc(0% - 0.75rem)',\r\n                        'align-items': 'flex-end',\r\n                    });\r\n                    break;\r\n                default:\r\n                    $elem.css({\r\n                        left: \"calc(\" + percentage + \"% - \" + elemMetrics.width / 2 + \"px)\",\r\n                        'align-items': 'center',\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            $elem.css({\r\n                'padding-left': '0.8rem',\r\n                top: \"calc(\" + percentage + \"% - \" + elemMetrics.height / 2 + \"px)\",\r\n            });\r\n        }\r\n    };\r\n    return SliderScale;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderScale);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/scale/scale.ts?");

/***/ }),

/***/ "./src/values-display/values-display.css":
/*!***********************************************!*\
  !*** ./src/values-display/values-display.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./values-display.css */ \"./node_modules/css-loader/dist/cjs.js!./src/values-display/values-display.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.css?");

/***/ }),

/***/ "./src/values-display/values-display.ts":
/*!**********************************************!*\
  !*** ./src/values-display/values-display.ts ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _values_display_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./values-display.css */ \"./src/values-display/values-display.css\");\n/* harmony import */ var _values_display_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_values_display_css__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nvar SliderValuesDisplay = /** @class */ (function () {\r\n    function SliderValuesDisplay(options) {\r\n        this.$view = options.$viewContainer;\r\n        this.$displayContainer = SliderValuesDisplay.createValuesDisplayContainer();\r\n        this.isRendered = false;\r\n    }\r\n    SliderValuesDisplay.prototype.update = function (opts) {\r\n        var data = opts.data, options = opts.options;\r\n        var currentOpts = this.$displayContainer.data('options');\r\n        var defaultOpts = {\r\n            isHorizontal: true,\r\n            prefix: '',\r\n            postfix: '',\r\n        };\r\n        var newOpts = __assign(__assign(__assign({}, defaultOpts), currentOpts), options);\r\n        this.$displayContainer.data({ options: newOpts, data: data.value });\r\n        if (!this.$firstValDisplay) {\r\n            this.$firstValDisplay = SliderValuesDisplay.createValueDisplay();\r\n            this.$displayContainer.append(this.$firstValDisplay);\r\n        }\r\n        // update valueDisplay elements\r\n        if (Array.isArray(data.value)) {\r\n            if (!this.$secondValDisplay) {\r\n                this.$secondValDisplay = SliderValuesDisplay.createValueDisplay();\r\n                this.$displayContainer.append(this.$secondValDisplay);\r\n            }\r\n            if (options.isHorizontal && !this.$secondValDisplay.hasClass('slider__display_value_horizontal')) {\r\n                this.$secondValDisplay.addClass('slider__display_value_horizontal');\r\n            }\r\n            if (!options.isHorizontal && this.$secondValDisplay.hasClass('slider__display_value_horizontal')) {\r\n                this.$secondValDisplay.removeClass('slider__display_value_horizontal');\r\n            }\r\n        }\r\n        else if (this.$secondValDisplay) {\r\n            this.$secondValDisplay.remove();\r\n            this.$secondValDisplay = null;\r\n        }\r\n        if (options.isHorizontal && !this.$displayContainer.hasClass('slider__display_container_horizontal')) {\r\n            this.$displayContainer.addClass('slider__display_container_horizontal');\r\n            this.$firstValDisplay.addClass('slider__display_value_horizontal');\r\n        }\r\n        if (!options.isHorizontal && this.$displayContainer.hasClass('slider__display_container_horizontal')) {\r\n            this.$displayContainer.removeClass('slider__display_container_horizontal');\r\n            this.$firstValDisplay.removeClass('slider__display_value_horizontal');\r\n        }\r\n        if (!this.isRendered) {\r\n            this.$view.prepend(this.$displayContainer);\r\n            this.isRendered = true;\r\n        }\r\n        this.updateValueDisplay({ data: data, options: newOpts });\r\n    };\r\n    SliderValuesDisplay.prototype.destroy = function () {\r\n        this.$displayContainer.remove();\r\n        if (this.$firstValDisplay) {\r\n            this.$firstValDisplay.remove();\r\n            this.$firstValDisplay = null;\r\n        }\r\n        if (this.$secondValDisplay) {\r\n            this.$secondValDisplay.remove();\r\n            this.$secondValDisplay = null;\r\n        }\r\n        this.isRendered = false;\r\n    };\r\n    SliderValuesDisplay.prototype.updateValueDisplay = function (updateData) {\r\n        var renderData = updateData.data, options = updateData.options;\r\n        var value = renderData.value, percentage = renderData.percentage;\r\n        var isHorizontal = options.isHorizontal;\r\n        var from;\r\n        var to;\r\n        var secondMetrics;\r\n        var firstData;\r\n        var secondData;\r\n        if (Array.isArray(percentage) && Array.isArray(value)) {\r\n            from = percentage[0], to = percentage[1];\r\n            firstData = value[0], secondData = value[1];\r\n            this.$secondValDisplay.data('data', secondData);\r\n            this.$secondValDisplay.data('options', options);\r\n            var secondHtml = options.prefix;\r\n            secondHtml += secondData.toString();\r\n            if (options.postfix !== '') {\r\n                secondHtml += options.postfix;\r\n            }\r\n            this.$secondValDisplay.html(secondHtml);\r\n            secondMetrics = this.$secondValDisplay[0].getBoundingClientRect();\r\n            this.$firstValDisplay.data('data', firstData);\r\n            this.$firstValDisplay.data('options', options);\r\n        }\r\n        if (!Array.isArray(percentage) && !Array.isArray(value)) {\r\n            from = percentage;\r\n            firstData = value;\r\n            this.$firstValDisplay.data('data', firstData);\r\n            this.$firstValDisplay.data('options', options);\r\n        }\r\n        var firstHtml = options.prefix;\r\n        firstHtml += firstData.toString();\r\n        if (options.postfix !== '')\r\n            firstHtml += options.postfix;\r\n        this.$firstValDisplay.html(firstHtml);\r\n        var firstMetrics = this.$firstValDisplay[0].getBoundingClientRect();\r\n        var firstPos;\r\n        var secondPos;\r\n        if (isHorizontal) {\r\n            firstPos = \"calc(\" + from + \"% - \" + firstMetrics.width / 2 + \"px)\";\r\n            this.$firstValDisplay.css({\r\n                top: '',\r\n                left: firstPos,\r\n            });\r\n            var _a = this.$firstValDisplay[0].getBoundingClientRect(), firstX = _a.x, firstWidth = _a.width;\r\n            var _b = this.$view[0].getBoundingClientRect(), containerX = _b.x, containerWidth = _b.width;\r\n            if (firstX < containerX) {\r\n                this.$firstValDisplay.css({ left: 'calc(0% - 0.75rem)' });\r\n            }\r\n            if ((firstX + firstWidth) > (containerX + containerWidth)) {\r\n                this.$firstValDisplay.css({\r\n                    left: \"calc(\" + (containerWidth - firstWidth) + \"px - 0.75rem)\",\r\n                });\r\n            }\r\n            if (this.$secondValDisplay) {\r\n                secondPos = \"calc(\" + to + \"% - \" + secondMetrics.width / 2 + \"px)\";\r\n                this.$secondValDisplay.css({\r\n                    top: '',\r\n                    left: secondPos,\r\n                });\r\n                var _c = this.$secondValDisplay[0].getBoundingClientRect(), x = _c.x, width = _c.width;\r\n                if ((x + width) > (containerX + containerWidth)) {\r\n                    this.$secondValDisplay.css({\r\n                        left: \"calc(\" + (containerWidth - width) + \"px - 0.75rem)\",\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            firstPos = \"calc(\" + from + \"% - \" + firstMetrics.height / 2 + \"px)\";\r\n            this.$firstValDisplay.css({\r\n                left: '',\r\n                top: firstPos,\r\n            });\r\n            var _d = this.$firstValDisplay[0].getBoundingClientRect(), firstY = _d.y, firstHeight = _d.height;\r\n            var _e = this.$view[0].getBoundingClientRect(), containerY = _e.y, containerHeight = _e.height;\r\n            if (firstY < containerY) {\r\n                this.$firstValDisplay.css({ top: 'calc(0% - 0.75rem)' });\r\n            }\r\n            if ((firstY + firstHeight) > (containerY + containerHeight)) {\r\n                this.$firstValDisplay.css({\r\n                    top: \"calc(\" + (containerHeight - firstHeight) + \"px - 0.75rem)\",\r\n                });\r\n            }\r\n            if (this.$secondValDisplay) {\r\n                secondPos = \"calc(\" + to + \"% - \" + secondMetrics.height / 2 + \"px)\";\r\n                this.$secondValDisplay.css({\r\n                    left: '',\r\n                    top: secondPos,\r\n                });\r\n                var _f = this.$secondValDisplay[0].getBoundingClientRect(), y = _f.y, height = _f.height;\r\n                if ((y + height) > (containerY + containerHeight)) {\r\n                    this.$secondValDisplay.css({\r\n                        top: \"calc(\" + (containerHeight - height) + \"px - 0.75rem)\",\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    SliderValuesDisplay.createValuesDisplayContainer = function () {\r\n        var $displayContainer = $('<div>', {\r\n            class: 'js-slider__display_container slider__display_container',\r\n        });\r\n        return $displayContainer;\r\n    };\r\n    SliderValuesDisplay.createValueDisplay = function () {\r\n        var $valueDisplay = $('<div>', { class: 'slider__display_value' });\r\n        return $valueDisplay;\r\n    };\r\n    return SliderValuesDisplay;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderValuesDisplay);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/values-display/values-display.ts?");

/***/ }),

/***/ "./src/view/view.css":
/*!***************************!*\
  !*** ./src/view/view.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./view.css */ \"./node_modules/css-loader/dist/cjs.js!./src/view/view.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.css?");

/***/ }),

/***/ "./src/view/view.ts":
/*!**************************!*\
  !*** ./src/view/view.ts ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _view_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view.css */ \"./src/view/view.css\");\n/* harmony import */ var _view_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_view_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _scale_scale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scale/scale */ \"./src/scale/scale.ts\");\n/* harmony import */ var _bar_bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bar/bar */ \"./src/bar/bar.ts\");\n/* harmony import */ var _runner_runner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runner/runner */ \"./src/runner/runner.ts\");\n/* harmony import */ var _values_display_values_display__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../values-display/values-display */ \"./src/values-display/values-display.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\n\r\n\r\n\r\n\r\nvar SliderView = /** @class */ (function () {\r\n    function SliderView(container, options) {\r\n        this.$container = $(container);\r\n        this.viewOptions = options;\r\n        this.observers = new Set();\r\n        this.$view = this.createView();\r\n        this.$barContainer = $('<div>', { class: 'slider__bar_container' });\r\n        this.$view.append(this.$barContainer);\r\n        this.isRendered = false;\r\n    }\r\n    SliderView.prototype.render = function (renderData) {\r\n        if (renderData === void 0) { renderData = this.renderData; }\r\n        this.renderData = renderData;\r\n        if (this.viewOptions.isHorizontal && !this.$view.hasClass('slider__container_horizontal')) {\r\n            this.$view.addClass('slider__container_horizontal');\r\n            this.$barContainer.addClass('slider__bar_container_horizontal');\r\n        }\r\n        if (!this.viewOptions.isHorizontal && this.$view.hasClass('slider__container_horizontal')) {\r\n            this.$view.removeClass('slider__container_horizontal');\r\n            this.$barContainer.removeClass('slider__bar_container_horizontal');\r\n        }\r\n        if (!this.isRendered) {\r\n            this.$container.append(this.$view);\r\n            this.attachEventHandlers();\r\n            this.isRendered = true;\r\n        }\r\n        this.updateValuesDisplay(renderData);\r\n        this.updateScale(renderData);\r\n        this.updateBar(renderData.percentage);\r\n        this.updateRunners(renderData);\r\n    };\r\n    SliderView.prototype.update = function (viewData) {\r\n        var state = __assign(__assign({}, this.viewOptions), this.validateData(viewData));\r\n        this.viewOptions = state;\r\n        this.$view.data('options', state);\r\n        this.notify({ event: 'update' });\r\n    };\r\n    SliderView.prototype.addObserver = function (observer) {\r\n        this.observers.add(observer);\r\n    };\r\n    SliderView.prototype.removeObserver = function (observer) {\r\n        this.observers.delete(observer);\r\n    };\r\n    SliderView.prototype.getData = function () {\r\n        return this.viewOptions;\r\n    };\r\n    SliderView.prototype.destroy = function () {\r\n        if (this.bar) {\r\n            this.bar.destroy();\r\n            this.bar = null;\r\n        }\r\n        if (this.scale) {\r\n            this.scale.destroy();\r\n            this.scale = null;\r\n        }\r\n        if (this.runner) {\r\n            this.runner.destroy();\r\n            this.runner = null;\r\n        }\r\n        if (this.secondRunner) {\r\n            this.secondRunner.destroy();\r\n            this.secondRunner = null;\r\n        }\r\n        if (this.valueDisplay) {\r\n            this.valueDisplay.destroy();\r\n            this.valueDisplay = null;\r\n        }\r\n        this.$view.remove();\r\n        this.isRendered = false;\r\n    };\r\n    SliderView.prototype.createView = function () {\r\n        var viewOptions = this.viewOptions;\r\n        var $view = $('<div>', {\r\n            class: 'js-slider__container slider__container',\r\n        });\r\n        $view.data('options', viewOptions);\r\n        return $view;\r\n    };\r\n    SliderView.prototype.updateBar = function (percentage) {\r\n        if (this.viewOptions.bar && this.bar) {\r\n            this.bar.update({\r\n                data: percentage,\r\n                options: this.viewOptions,\r\n            });\r\n        }\r\n        if (this.viewOptions.bar && !this.bar) {\r\n            this.bar = new _bar_bar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\r\n                $viewContainer: this.$view,\r\n                $barContainer: this.$barContainer,\r\n            });\r\n            this.bar.update({\r\n                data: percentage,\r\n                options: this.viewOptions,\r\n            });\r\n        }\r\n        if (!this.viewOptions.bar && this.bar) {\r\n            this.bar.destroy();\r\n        }\r\n    };\r\n    SliderView.prototype.updateScale = function (renderData) {\r\n        if (this.viewOptions.scale && this.scale) {\r\n            this.scale.update({\r\n                data: renderData,\r\n                options: this.viewOptions,\r\n            });\r\n        }\r\n        if (this.viewOptions.scale && !this.scale) {\r\n            this.scale = new _scale_scale__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ $viewContainer: this.$view });\r\n            this.scale.update({\r\n                data: renderData,\r\n                options: this.viewOptions,\r\n            });\r\n        }\r\n        if (!this.viewOptions.scale && this.scale) {\r\n            this.scale.destroy();\r\n        }\r\n    };\r\n    SliderView.prototype.updateValuesDisplay = function (renderData) {\r\n        var updData = {\r\n            data: renderData,\r\n            options: this.viewOptions,\r\n        };\r\n        if (this.viewOptions.displayValue && this.valueDisplay) {\r\n            this.valueDisplay.update(updData);\r\n        }\r\n        if (this.viewOptions.displayValue && !this.valueDisplay) {\r\n            this.valueDisplay = new _values_display_values_display__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({ $viewContainer: this.$view });\r\n            this.valueDisplay.update(updData);\r\n        }\r\n        if (!this.viewOptions.displayValue && this.valueDisplay) {\r\n            this.valueDisplay.destroy();\r\n            this.valueDisplay = null;\r\n        }\r\n    };\r\n    SliderView.prototype.updateRunners = function (renderData) {\r\n        var updData = {\r\n            data: renderData,\r\n            options: this.viewOptions,\r\n        };\r\n        if (this.viewOptions.runner) {\r\n            if (Array.isArray(renderData.value)) {\r\n                if (this.runner) {\r\n                    this.runner.update(updData);\r\n                }\r\n                else {\r\n                    this.runner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\r\n                        $viewContainer: this.$view,\r\n                        $barContainer: this.$barContainer,\r\n                        isSecond: false,\r\n                    });\r\n                    this.runner.update(updData);\r\n                }\r\n                if (this.secondRunner) {\r\n                    this.secondRunner.update(updData);\r\n                }\r\n                else {\r\n                    this.secondRunner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\r\n                        $viewContainer: this.$view,\r\n                        $barContainer: this.$barContainer,\r\n                        isSecond: true,\r\n                    });\r\n                    this.secondRunner.update(updData);\r\n                }\r\n            }\r\n            else {\r\n                if (this.runner) {\r\n                    this.runner.update(updData);\r\n                }\r\n                else {\r\n                    this.runner = new _runner_runner__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\r\n                        $viewContainer: this.$view,\r\n                        $barContainer: this.$barContainer,\r\n                        isSecond: false,\r\n                    });\r\n                    this.runner.update(updData);\r\n                }\r\n                if (this.secondRunner) {\r\n                    this.secondRunner.destroy();\r\n                    this.secondRunner = null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.runner) {\r\n                this.runner.destroy();\r\n                this.runner = null;\r\n            }\r\n            if (this.secondRunner) {\r\n                this.secondRunner.destroy();\r\n                this.runner = null;\r\n            }\r\n        }\r\n    };\r\n    SliderView.prototype.notify = function (action) {\r\n        switch (action.event) {\r\n            case 'start':\r\n                this.observers.forEach(function (observer) {\r\n                    observer.start();\r\n                });\r\n                break;\r\n            case 'change':\r\n                this.observers.forEach(function (observer) {\r\n                    observer.change(action.value);\r\n                });\r\n                break;\r\n            case 'finish':\r\n                this.observers.forEach(function (observer) {\r\n                    observer.finish();\r\n                });\r\n                break;\r\n            case 'update':\r\n                this.observers.forEach(function (observer) {\r\n                    observer.update();\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    SliderView.prototype.attachEventHandlers = function () {\r\n        this.$view.bind('startChanging.myMVPSlider', this.startChangingHandler.bind(this));\r\n        this.$view.bind('changeValue.myMVPSlider', this.changeValueHandler.bind(this));\r\n        this.$view.bind('finish.myMVPSlider', this.finishEventHandler.bind(this));\r\n        this.$barContainer.on('dragstart', false);\r\n    };\r\n    SliderView.prototype.startChangingHandler = function (event, isDragStarted) {\r\n        var startAction = { event: 'start' };\r\n        this.notify(startAction);\r\n        var startValue = this.renderData.percentage;\r\n        if (isDragStarted && Array.isArray(startValue)) {\r\n            var dragHandler = this.makeDragHandler(startValue);\r\n            var dropHandler = this.makeDropHandler();\r\n            this.$view.bind('dragRange.myMVPSlider', dragHandler);\r\n            this.$view.bind('dropRange.myMVPSlider', dropHandler);\r\n        }\r\n    };\r\n    SliderView.prototype.makeDragHandler = function (start) {\r\n        var _this = this;\r\n        var dragHandler = function (event, dragDistance) {\r\n            var valuesDiff = start[1] - start[0];\r\n            var newVal = start[0] + dragDistance;\r\n            var newSecondVal = start[1] + dragDistance;\r\n            if (newVal < 0) {\r\n                newVal = 0;\r\n                newSecondVal = newVal + valuesDiff;\r\n            }\r\n            if (newSecondVal > 100) {\r\n                newSecondVal = 100;\r\n                newVal = newSecondVal - valuesDiff;\r\n            }\r\n            var changeAction = { event: 'change', value: [newVal, newSecondVal] };\r\n            _this.notify(changeAction);\r\n        };\r\n        return dragHandler;\r\n    };\r\n    SliderView.prototype.makeDropHandler = function () {\r\n        var _this = this;\r\n        var dragHandler = function () {\r\n            var finishAction = { event: 'finish' };\r\n            _this.notify(finishAction);\r\n            _this.$view.unbind('dragRange.myMVPSlider', false);\r\n            _this.$view.unbind('dropRange.myMVPSlider', false);\r\n        };\r\n        return dragHandler;\r\n    };\r\n    SliderView.prototype.changeValueHandler = function (event, value, isSecond) {\r\n        var currentValue = this.renderData.percentage;\r\n        var changeAction;\r\n        if (isSecond && Array.isArray(currentValue)) {\r\n            changeAction = { event: 'change', value: [currentValue[0], value] };\r\n        }\r\n        else if (Array.isArray(currentValue)) {\r\n            changeAction = { event: 'change', value: [value, currentValue[1]] };\r\n        }\r\n        else {\r\n            changeAction = { event: 'change', value: value };\r\n        }\r\n        this.notify(changeAction);\r\n    };\r\n    SliderView.prototype.finishEventHandler = function () {\r\n        var finishAction = { event: 'finish' };\r\n        this.notify(finishAction);\r\n    };\r\n    SliderView.prototype.validateData = function (data) {\r\n        var _this = this;\r\n        var dataEntries = Object.entries(data);\r\n        var validData = dataEntries.map(function (entry) {\r\n            var key = entry[0];\r\n            switch (key) {\r\n                case 'isHorizontal':\r\n                case 'range':\r\n                case 'dragInterval':\r\n                case 'runner':\r\n                case 'bar':\r\n                case 'scale':\r\n                case 'displayScaleValue':\r\n                case 'displayValue':\r\n                case 'displayMin':\r\n                case 'displayMax':\r\n                    if (typeof entry[1] === 'boolean') {\r\n                        return entry;\r\n                    }\r\n                    break;\r\n                case 'numOfScaleVal':\r\n                    if (SliderView.isValidNumOfValue(entry[1])) {\r\n                        return entry;\r\n                    }\r\n                    break;\r\n                case 'prefix':\r\n                case 'postfix':\r\n                    if (typeof entry[1] === 'string') {\r\n                        return entry;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return undefined;\r\n            }\r\n            return [key, _this.viewOptions[key]];\r\n        });\r\n        var resultData = validData.reduce(function (acc, _a) {\r\n            var _b;\r\n            var k = _a[0], v = _a[1];\r\n            return (__assign(__assign({}, acc), (_b = {}, _b[k] = v, _b)));\r\n        }, {});\r\n        return resultData;\r\n    };\r\n    SliderView.isValidNumOfValue = function (value) {\r\n        if (typeof value === 'number') {\r\n            return Number.isFinite(value) && (value >= 0) && (value <= 10);\r\n        }\r\n        return false;\r\n    };\r\n    return SliderView;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (SliderView);\r\n\n\n//# sourceURL=webpack://my-mvp-range-slider/./src/view/view.ts?");

/***/ })

/******/ });
});